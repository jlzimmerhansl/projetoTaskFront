[{"/Users/jessica/Desktop/TCC/consig/frontend/src/App.tsx":"1","/Users/jessica/Desktop/TCC/consig/frontend/src/styles/global.ts":"2","/Users/jessica/Desktop/TCC/consig/frontend/src/hooks/toast.tsx":"3","/Users/jessica/Desktop/TCC/consig/frontend/src/routes/Route.tsx":"4","/Users/jessica/Desktop/TCC/consig/frontend/src/services/api.ts":"5","/Users/jessica/Desktop/TCC/consig/frontend/src/pages/Users/index.tsx":"6","/Users/jessica/Desktop/TCC/consig/frontend/src/pages/Success/index.tsx":"7","/Users/jessica/Desktop/TCC/consig/frontend/src/pages/ForgotPassword/index.tsx":"8","/Users/jessica/Desktop/TCC/consig/frontend/src/pages/Suplier/index.tsx":"9","/Users/jessica/Desktop/TCC/consig/frontend/src/pages/CreateSuplier/index.tsx":"10","/Users/jessica/Desktop/TCC/consig/frontend/src/pages/Batchs/index.tsx":"11","/Users/jessica/Desktop/TCC/consig/frontend/src/pages/CreateSurgery/index.tsx":"12","/Users/jessica/Desktop/TCC/consig/frontend/src/pages/Users/styles.ts":"13","/Users/jessica/Desktop/TCC/consig/frontend/src/pages/SignUp/styles.ts":"14","/Users/jessica/Desktop/TCC/consig/frontend/src/pages/CreateSurgery/styles.ts":"15","/Users/jessica/Desktop/TCC/consig/frontend/src/utils/getValidationErrors.ts":"16","/Users/jessica/Desktop/TCC/consig/frontend/src/pages/Batchs/styles.ts":"17","/Users/jessica/Desktop/TCC/consig/frontend/src/pages/Surgeries/styles.ts":"18","/Users/jessica/Desktop/TCC/consig/frontend/src/components/Header/index.tsx":"19","/Users/jessica/Desktop/TCC/consig/frontend/src/components/ModalEditUser/index.tsx":"20","/Users/jessica/Desktop/TCC/consig/frontend/src/components/InputSelect/index.tsx":"21","/Users/jessica/Desktop/TCC/consig/frontend/src/pages/CreateSuplier/styles.ts":"22","/Users/jessica/Desktop/TCC/consig/frontend/src/pages/Suplier/styles.ts":"23","/Users/jessica/Desktop/TCC/consig/frontend/src/pages/Dashboard/styles.ts":"24","/Users/jessica/Desktop/TCC/consig/frontend/src/pages/ForgotPassword/styles.ts":"25","/Users/jessica/Desktop/TCC/consig/frontend/src/components/ModalEditUser/styles.ts":"26","/Users/jessica/Desktop/TCC/consig/frontend/src/components/InputSelect/styles.ts":"27","/Users/jessica/Desktop/TCC/consig/frontend/src/components/ListItemSurgery/index.tsx":"28","/Users/jessica/Desktop/TCC/consig/frontend/src/components/Sidebar/styles.ts":"29","/Users/jessica/Desktop/TCC/consig/frontend/src/components/Toast/index.tsx":"30","/Users/jessica/Desktop/TCC/consig/frontend/src/components/ListItemMaterial/styles.ts":"31","/Users/jessica/Desktop/TCC/consig/frontend/src/components/ListItemSuplier/index.tsx":"32","/Users/jessica/Desktop/TCC/consig/frontend/src/components/ListItemSurgery/styles.ts":"33","/Users/jessica/Desktop/TCC/consig/frontend/src/components/InputMask/styles.ts":"34","/Users/jessica/Desktop/TCC/consig/frontend/src/components/Menu/styles.ts":"35","/Users/jessica/Desktop/TCC/consig/frontend/src/components/MenuItem/index.tsx":"36","/Users/jessica/Desktop/TCC/consig/frontend/src/components/MenuItem/styles.ts":"37","/Users/jessica/Desktop/TCC/consig/frontend/src/components/ListItemMaterial/index.tsx":"38","/Users/jessica/Desktop/TCC/consig/frontend/src/pages/Batch/styles.ts":"39","/Users/jessica/Desktop/TCC/consig/frontend/src/pages/Batch/index.tsx":"40","/Users/jessica/Desktop/TCC/consig/frontend/src/routes/index.tsx":"41","/Users/jessica/Desktop/TCC/consig/frontend/src/hooks/auth.tsx":"42","/Users/jessica/Desktop/TCC/consig/frontend/src/pages/ResetPassword/index.tsx":"43","/Users/jessica/Desktop/TCC/consig/frontend/src/pages/Patient/index.tsx":"44","/Users/jessica/Desktop/TCC/consig/frontend/src/pages/Surgery/index.tsx":"45","/Users/jessica/Desktop/TCC/consig/frontend/src/styles/theme/colors.ts":"46","/Users/jessica/Desktop/TCC/consig/frontend/src/pages/Success/styles.ts":"47","/Users/jessica/Desktop/TCC/consig/frontend/src/pages/CreateBatch/styles.ts":"48","/Users/jessica/Desktop/TCC/consig/frontend/src/pages/CreatePatient/styles.ts":"49","/Users/jessica/Desktop/TCC/consig/frontend/src/components/ToastContainer/styles.ts":"50","/Users/jessica/Desktop/TCC/consig/frontend/src/components/Button/index.tsx":"51","/Users/jessica/Desktop/TCC/consig/frontend/src/components/ListItem/index.tsx":"52","/Users/jessica/Desktop/TCC/consig/frontend/src/components/Card/index.tsx":"53","/Users/jessica/Desktop/TCC/consig/frontend/src/pages/Patients/styles.ts":"54","/Users/jessica/Desktop/TCC/consig/frontend/src/helpers/removeMask.ts":"55","/Users/jessica/Desktop/TCC/consig/frontend/src/helpers/includeMaskCNPJ.ts":"56","/Users/jessica/Desktop/TCC/consig/frontend/src/components/TitleContent/styles.ts":"57","/Users/jessica/Desktop/TCC/consig/frontend/src/components/InputSelectSimple/styles.ts":"58","/Users/jessica/Desktop/TCC/consig/frontend/src/components/ModalEditSurgery/index.tsx":"59","/Users/jessica/Desktop/TCC/consig/frontend/src/components/ListItemPatient/index.tsx":"60","/Users/jessica/Desktop/TCC/consig/frontend/src/components/ModalEditSuplier/index.tsx":"61","/Users/jessica/Desktop/TCC/consig/frontend/src/components/ModalEditSurgery/styles.ts":"62","/Users/jessica/Desktop/TCC/consig/frontend/src/components/Menu/index.tsx":"63","/Users/jessica/Desktop/TCC/consig/frontend/src/components/ListItemPatient/styles.ts":"64","/Users/jessica/Desktop/TCC/consig/frontend/src/components/ListItemSuplier/styles.ts":"65","/Users/jessica/Desktop/TCC/consig/frontend/src/components/Tooltip/styles.ts":"66","/Users/jessica/Desktop/TCC/consig/frontend/src/pages/User/styles.ts":"67","/Users/jessica/Desktop/TCC/consig/frontend/src/styles/theme/index.ts":"68","/Users/jessica/Desktop/TCC/consig/frontend/src/pages/Dashboard/index.tsx":"69","/Users/jessica/Desktop/TCC/consig/frontend/src/pages/Supliers/index.tsx":"70","/Users/jessica/Desktop/TCC/consig/frontend/src/pages/CreateBatch/index.tsx":"71","/Users/jessica/Desktop/TCC/consig/frontend/src/pages/SignIn/styles.ts":"72","/Users/jessica/Desktop/TCC/consig/frontend/src/components/ToastContainer/index.tsx":"73","/Users/jessica/Desktop/TCC/consig/frontend/src/components/Input/index.tsx":"74","/Users/jessica/Desktop/TCC/consig/frontend/src/components/TitleContent/index.tsx":"75","/Users/jessica/Desktop/TCC/consig/frontend/src/components/InputSelectSimple/index.tsx":"76","/Users/jessica/Desktop/TCC/consig/frontend/src/components/Button/styles.ts":"77","/Users/jessica/Desktop/TCC/consig/frontend/src/components/Input/styles.ts":"78","/Users/jessica/Desktop/TCC/consig/frontend/src/components/ModalEditBatch/styles.ts":"79","/Users/jessica/Desktop/TCC/consig/frontend/src/components/Modal/index.tsx":"80","/Users/jessica/Desktop/TCC/consig/frontend/src/components/Card/styles.ts":"81","/Users/jessica/Desktop/TCC/consig/frontend/src/pages/User/index.tsx":"82","/Users/jessica/Desktop/TCC/consig/frontend/src/pages/Surgeries/index.tsx":"83","/Users/jessica/Desktop/TCC/consig/frontend/src/pages/Surgery/styles.ts":"84","/Users/jessica/Desktop/TCC/consig/frontend/src/components/LIstItemBatch/index.tsx":"85","/Users/jessica/Desktop/TCC/consig/frontend/src/components/ListItem/styles.ts":"86","/Users/jessica/Desktop/TCC/consig/frontend/src/components/ModalEditPatient/index.tsx":"87","/Users/jessica/Desktop/TCC/consig/frontend/src/components/Tooltip/index.tsx":"88","/Users/jessica/Desktop/TCC/consig/frontend/src/index.tsx":"89","/Users/jessica/Desktop/TCC/consig/frontend/src/pages/SignUp/index.tsx":"90","/Users/jessica/Desktop/TCC/consig/frontend/src/pages/CreatePatient/index.tsx":"91","/Users/jessica/Desktop/TCC/consig/frontend/src/components/ShowInputPassword/index.tsx":"92","/Users/jessica/Desktop/TCC/consig/frontend/src/components/ShowInputPassword/styles.ts":"93","/Users/jessica/Desktop/TCC/consig/frontend/src/components/LIstItemBatch/styles.ts":"94","/Users/jessica/Desktop/TCC/consig/frontend/src/components/ModalEditPatient/styles.ts":"95","/Users/jessica/Desktop/TCC/consig/frontend/src/components/ModalEditSuplier/styles.ts":"96","/Users/jessica/Desktop/TCC/consig/frontend/src/pages/SignIn/index.tsx":"97","/Users/jessica/Desktop/TCC/consig/frontend/src/pages/Supliers/styles.ts":"98","/Users/jessica/Desktop/TCC/consig/frontend/src/pages/Patients/index.tsx":"99","/Users/jessica/Desktop/TCC/consig/frontend/src/pages/SuccessEditSuplier/styles.ts":"100","/Users/jessica/Desktop/TCC/consig/frontend/src/pages/Patient/styles.ts":"101","/Users/jessica/Desktop/TCC/consig/frontend/src/components/Header/styles.ts":"102","/Users/jessica/Desktop/TCC/consig/frontend/src/pages/ResetPassword/styles.ts":"103","/Users/jessica/Desktop/TCC/consig/frontend/src/components/InputMask/index.tsx":"104","/Users/jessica/Desktop/TCC/consig/frontend/src/components/ModalEditBatch/index.tsx":"105","/Users/jessica/Desktop/TCC/consig/frontend/src/pages/SuccessEditSuplier/index.tsx":"106","/Users/jessica/Desktop/TCC/consig/frontend/src/components/Sidebar/index.tsx":"107","/Users/jessica/Desktop/TCC/consig/frontend/src/components/Toast/styles.ts":"108","/Users/jessica/Desktop/estudos/projetoTaskFrontend/src/index.tsx":"109","/Users/jessica/Desktop/estudos/projetoTaskFrontend/src/routes/index.tsx":"110","/Users/jessica/Desktop/estudos/projetoTaskFrontend/src/hooks/toast.tsx":"111","/Users/jessica/Desktop/estudos/projetoTaskFrontend/src/styles/theme/index.ts":"112","/Users/jessica/Desktop/estudos/projetoTaskFrontend/src/pages/Landing/index.tsx":"113","/Users/jessica/Desktop/estudos/projetoTaskFrontend/src/pages/CreateTask/index.tsx":"114","/Users/jessica/Desktop/estudos/projetoTaskFrontend/src/pages/CreateStory/styles.ts":"115","/Users/jessica/Desktop/estudos/projetoTaskFrontend/src/pages/CreateTask/styles.ts":"116","/Users/jessica/Desktop/estudos/projetoTaskFrontend/src/components/ToastContainer/index.tsx":"117","/Users/jessica/Desktop/estudos/projetoTaskFrontend/src/components/ListItem/index.tsx":"118","/Users/jessica/Desktop/estudos/projetoTaskFrontend/src/components/Input/index.tsx":"119","/Users/jessica/Desktop/estudos/projetoTaskFrontend/src/components/Sidebar/index.tsx":"120","/Users/jessica/Desktop/estudos/projetoTaskFrontend/src/components/ListItemTask/index.tsx":"121","/Users/jessica/Desktop/estudos/projetoTaskFrontend/src/components/Button/styles.ts":"122","/Users/jessica/Desktop/estudos/projetoTaskFrontend/src/components/InputSelectSimple/styles.ts":"123","/Users/jessica/Desktop/estudos/projetoTaskFrontend/src/components/ModalEditTask/styles.ts":"124","/Users/jessica/Desktop/estudos/projetoTaskFrontend/src/components/Modal/index.tsx":"125","/Users/jessica/Desktop/estudos/projetoTaskFrontend/src/components/Menu/styles.ts":"126","/Users/jessica/Desktop/estudos/projetoTaskFrontend/src/components/MenuItem/styles.ts":"127","/Users/jessica/Desktop/estudos/projetoTaskFrontend/src/components/ModalEditTask/index.tsx":"128","/Users/jessica/Desktop/estudos/projetoTaskFrontend/src/styles/global.ts":"129","/Users/jessica/Desktop/estudos/projetoTaskFrontend/src/pages/Landing/styles.ts":"130","/Users/jessica/Desktop/estudos/projetoTaskFrontend/src/components/Button/index.tsx":"131","/Users/jessica/Desktop/estudos/projetoTaskFrontend/src/components/Sidebar/styles.ts":"132","/Users/jessica/Desktop/estudos/projetoTaskFrontend/src/components/ModalEditStory/styles.ts":"133","/Users/jessica/Desktop/estudos/projetoTaskFrontend/src/components/Toast/index.tsx":"134","/Users/jessica/Desktop/estudos/projetoTaskFrontend/src/components/Tooltip/index.tsx":"135","/Users/jessica/Desktop/estudos/projetoTaskFrontend/src/components/ModalEditStory/index.tsx":"136","/Users/jessica/Desktop/estudos/projetoTaskFrontend/src/styles/theme/colors.ts":"137","/Users/jessica/Desktop/estudos/projetoTaskFrontend/src/pages/CreateStory/index.tsx":"138","/Users/jessica/Desktop/estudos/projetoTaskFrontend/src/components/InputSelectSimple/index.tsx":"139","/Users/jessica/Desktop/estudos/projetoTaskFrontend/src/components/ToastContainer/styles.ts":"140","/Users/jessica/Desktop/estudos/projetoTaskFrontend/src/components/ListItem/styles.ts":"141","/Users/jessica/Desktop/estudos/projetoTaskFrontend/src/components/Toast/styles.ts":"142","/Users/jessica/Desktop/estudos/projetoTaskFrontend/src/components/Input/styles.ts":"143","/Users/jessica/Desktop/estudos/projetoTaskFrontend/src/App.tsx":"144","/Users/jessica/Desktop/estudos/projetoTaskFrontend/src/services/api.ts":"145","/Users/jessica/Desktop/estudos/projetoTaskFrontend/src/utils/getValidationErrors.ts":"146","/Users/jessica/Desktop/estudos/projetoTaskFrontend/src/components/MenuItem/index.tsx":"147","/Users/jessica/Desktop/estudos/projetoTaskFrontend/src/components/ListItemTask/styles.ts":"148"},{"size":280,"mtime":1611789662476,"results":"149","hashOfConfig":"150"},{"size":423,"mtime":1609875184080,"results":"151","hashOfConfig":"150"},{"size":1466,"mtime":1615421216011,"results":"152","hashOfConfig":"150"},{"size":829,"mtime":1611789786373,"results":"153","hashOfConfig":"150"},{"size":112,"mtime":1614628201180,"results":"154","hashOfConfig":"150"},{"size":3806,"mtime":1618963777792,"results":"155","hashOfConfig":"150"},{"size":1039,"mtime":1616446481916,"results":"156","hashOfConfig":"150"},{"size":2822,"mtime":1616116932609,"results":"157","hashOfConfig":"150"},{"size":2602,"mtime":1618960516265,"results":"158","hashOfConfig":"150"},{"size":4360,"mtime":1618019787605,"results":"159","hashOfConfig":"150"},{"size":4489,"mtime":1619228574346,"results":"160","hashOfConfig":"150"},{"size":4124,"mtime":1617489103184,"results":"161","hashOfConfig":"150"},{"size":1412,"mtime":1618963790440,"results":"162","hashOfConfig":"150"},{"size":1110,"mtime":1610663090880,"results":"163","hashOfConfig":"150"},{"size":1843,"mtime":1617480263694,"results":"164","hashOfConfig":"150"},{"size":345,"mtime":1615330006099,"results":"165","hashOfConfig":"150"},{"size":1783,"mtime":1616957407396,"results":"166","hashOfConfig":"150"},{"size":1669,"mtime":1617312436772,"results":"167","hashOfConfig":"150"},{"size":512,"mtime":1615163312403,"results":"168","hashOfConfig":"150"},{"size":1893,"mtime":1615255692277,"results":"169","hashOfConfig":"150"},{"size":2188,"mtime":1617114441843,"results":"170","hashOfConfig":"150"},{"size":1843,"mtime":1616204908406,"results":"171","hashOfConfig":"150"},{"size":1424,"mtime":1618960538629,"results":"172","hashOfConfig":"150"},{"size":840,"mtime":1616030314401,"results":"173","hashOfConfig":"150"},{"size":864,"mtime":1616116922795,"results":"174","hashOfConfig":"150"},{"size":391,"mtime":1615146794315,"results":"175","hashOfConfig":"150"},{"size":2337,"mtime":1617026472140,"results":"176","hashOfConfig":"150"},{"size":2566,"mtime":1619483903413,"results":"177","hashOfConfig":"150"},{"size":407,"mtime":1614717885833,"results":"178","hashOfConfig":"150"},{"size":1201,"mtime":1615422746825,"results":"179","hashOfConfig":"150"},{"size":2306,"mtime":1619645958814,"results":"180","hashOfConfig":"150"},{"size":2393,"mtime":1618366373180,"results":"181","hashOfConfig":"150"},{"size":4154,"mtime":1619483490162,"results":"182","hashOfConfig":"150"},{"size":2085,"mtime":1616270376442,"results":"183","hashOfConfig":"150"},{"size":229,"mtime":1614629741351,"results":"184","hashOfConfig":"150"},{"size":523,"mtime":1613516610633,"results":"185","hashOfConfig":"150"},{"size":887,"mtime":1614718445064,"results":"186","hashOfConfig":"150"},{"size":2424,"mtime":1619141940071,"results":"187","hashOfConfig":"150"},{"size":2698,"mtime":1619223362608,"results":"188","hashOfConfig":"150"},{"size":5518,"mtime":1619475404173,"results":"189","hashOfConfig":"150"},{"size":2881,"mtime":1619480634172,"results":"190","hashOfConfig":"150"},{"size":2224,"mtime":1614628594888,"results":"191","hashOfConfig":"150"},{"size":3429,"mtime":1616451135226,"results":"192","hashOfConfig":"150"},{"size":4944,"mtime":1619480513810,"results":"193","hashOfConfig":"150"},{"size":4108,"mtime":1618963552722,"results":"194","hashOfConfig":"150"},{"size":465,"mtime":1617319037660,"results":"195","hashOfConfig":"150"},{"size":1078,"mtime":1612316613621,"results":"196","hashOfConfig":"150"},{"size":2596,"mtime":1617039990289,"results":"197","hashOfConfig":"150"},{"size":1843,"mtime":1616466639250,"results":"198","hashOfConfig":"150"},{"size":160,"mtime":1615321506205,"results":"199","hashOfConfig":"150"},{"size":606,"mtime":1615330583309,"results":"200","hashOfConfig":"150"},{"size":1193,"mtime":1615245035547,"results":"201","hashOfConfig":"150"},{"size":534,"mtime":1617141090975,"results":"202","hashOfConfig":"150"},{"size":989,"mtime":1618958934234,"results":"203","hashOfConfig":"150"},{"size":150,"mtime":1616273099945,"results":"204","hashOfConfig":"150"},{"size":198,"mtime":1616633078078,"results":"205","hashOfConfig":"150"},{"size":752,"mtime":1618958824838,"results":"206","hashOfConfig":"150"},{"size":2337,"mtime":1617481902515,"results":"207","hashOfConfig":"150"},{"size":2327,"mtime":1619483845771,"results":"208","hashOfConfig":"150"},{"size":2855,"mtime":1619657585457,"results":"209","hashOfConfig":"150"},{"size":2251,"mtime":1618278148539,"results":"210","hashOfConfig":"150"},{"size":391,"mtime":1617489408430,"results":"211","hashOfConfig":"150"},{"size":1345,"mtime":1617493640772,"results":"212","hashOfConfig":"150"},{"size":2262,"mtime":1619480851942,"results":"213","hashOfConfig":"150"},{"size":2276,"mtime":1619481198698,"results":"214","hashOfConfig":"150"},{"size":828,"mtime":1615425300436,"results":"215","hashOfConfig":"150"},{"size":1253,"mtime":1618963686937,"results":"216","hashOfConfig":"150"},{"size":119,"mtime":1609165515225,"results":"217","hashOfConfig":"150"},{"size":1980,"mtime":1619488911772,"results":"218","hashOfConfig":"150"},{"size":4143,"mtime":1619228822772,"results":"219","hashOfConfig":"150"},{"size":5424,"mtime":1617120295672,"results":"220","hashOfConfig":"150"},{"size":799,"mtime":1615330488990,"results":"221","hashOfConfig":"150"},{"size":771,"mtime":1615421974876,"results":"222","hashOfConfig":"150"},{"size":1575,"mtime":1617028598405,"results":"223","hashOfConfig":"150"},{"size":477,"mtime":1619133575013,"results":"224","hashOfConfig":"150"},{"size":2200,"mtime":1617483611086,"results":"225","hashOfConfig":"150"},{"size":697,"mtime":1612316031353,"results":"226","hashOfConfig":"150"},{"size":2388,"mtime":1617040711022,"results":"227","hashOfConfig":"150"},{"size":391,"mtime":1617121959819,"results":"228","hashOfConfig":"150"},{"size":1031,"mtime":1615142621463,"results":"229","hashOfConfig":"150"},{"size":741,"mtime":1616030558483,"results":"230","hashOfConfig":"150"},{"size":2132,"mtime":1618963659774,"results":"231","hashOfConfig":"150"},{"size":5062,"mtime":1619483887725,"results":"232","hashOfConfig":"150"},{"size":4003,"mtime":1618963704449,"results":"233","hashOfConfig":"150"},{"size":2871,"mtime":1619226046416,"results":"234","hashOfConfig":"150"},{"size":849,"mtime":1619481160460,"results":"235","hashOfConfig":"150"},{"size":1700,"mtime":1618449573093,"results":"236","hashOfConfig":"150"},{"size":348,"mtime":1615425391825,"results":"237","hashOfConfig":"150"},{"size":193,"mtime":1609166174020,"results":"238","hashOfConfig":"150"},{"size":3348,"mtime":1615865234511,"results":"239","hashOfConfig":"150"},{"size":3574,"mtime":1619656889750,"results":"240","hashOfConfig":"150"},{"size":1170,"mtime":1609972793614,"results":"241","hashOfConfig":"150"},{"size":635,"mtime":1610661516203,"results":"242","hashOfConfig":"150"},{"size":2491,"mtime":1618537952972,"results":"243","hashOfConfig":"150"},{"size":391,"mtime":1616469434226,"results":"244","hashOfConfig":"150"},{"size":391,"mtime":1616454412030,"results":"245","hashOfConfig":"150"},{"size":3138,"mtime":1615417163561,"results":"246","hashOfConfig":"150"},{"size":1151,"mtime":1618960625044,"results":"247","hashOfConfig":"150"},{"size":4315,"mtime":1618959448347,"results":"248","hashOfConfig":"150"},{"size":1078,"mtime":1619227224147,"results":"249","hashOfConfig":"150"},{"size":2378,"mtime":1619479321635,"results":"250","hashOfConfig":"150"},{"size":942,"mtime":1615846495032,"results":"251","hashOfConfig":"150"},{"size":777,"mtime":1615426441017,"results":"252","hashOfConfig":"150"},{"size":1717,"mtime":1616270845542,"results":"253","hashOfConfig":"150"},{"size":3263,"mtime":1618622255671,"results":"254","hashOfConfig":"150"},{"size":866,"mtime":1619227320100,"results":"255","hashOfConfig":"150"},{"size":329,"mtime":1613508798527,"results":"256","hashOfConfig":"150"},{"size":1180,"mtime":1615424387045,"results":"257","hashOfConfig":"150"},{"size":193,"mtime":1620000607073,"results":"258","hashOfConfig":"259"},{"size":743,"mtime":1620005122932,"results":"260","hashOfConfig":"259"},{"size":1466,"mtime":1620000607072,"results":"261","hashOfConfig":"259"},{"size":119,"mtime":1620000607096,"results":"262","hashOfConfig":"259"},{"size":1470,"mtime":1620001744915,"results":"263","hashOfConfig":"259"},{"size":8513,"mtime":1620016360456,"results":"264","hashOfConfig":"259"},{"size":1062,"mtime":1620014773426,"results":"265","hashOfConfig":"259"},{"size":1935,"mtime":1620017736064,"results":"266","hashOfConfig":"259"},{"size":771,"mtime":1620000607066,"results":"267","hashOfConfig":"259"},{"size":1146,"mtime":1620005087771,"results":"268","hashOfConfig":"259"},{"size":1575,"mtime":1620002770972,"results":"269","hashOfConfig":"259"},{"size":325,"mtime":1620012545977,"results":"270","hashOfConfig":"259"},{"size":2655,"mtime":1620017533444,"results":"271","hashOfConfig":"259"},{"size":751,"mtime":1620017149287,"results":"272","hashOfConfig":"259"},{"size":2323,"mtime":1620013369063,"results":"273","hashOfConfig":"259"},{"size":389,"mtime":1620017854820,"results":"274","hashOfConfig":"259"},{"size":1031,"mtime":1620000606198,"results":"275","hashOfConfig":"259"},{"size":229,"mtime":1620000606197,"results":"276","hashOfConfig":"259"},{"size":883,"mtime":1620012504875,"results":"277","hashOfConfig":"259"},{"size":3970,"mtime":1620017896905,"results":"278","hashOfConfig":"259"},{"size":423,"mtime":1620000607095,"results":"279","hashOfConfig":"259"},{"size":1999,"mtime":1620001605263,"results":"280","hashOfConfig":"259"},{"size":606,"mtime":1620000606184,"results":"281","hashOfConfig":"259"},{"size":405,"mtime":1620012524399,"results":"282","hashOfConfig":"259"},{"size":391,"mtime":1620000606397,"results":"283","hashOfConfig":"259"},{"size":1201,"mtime":1620000607065,"results":"284","hashOfConfig":"259"},{"size":348,"mtime":1620000607068,"results":"285","hashOfConfig":"259"},{"size":1584,"mtime":1620013068146,"results":"286","hashOfConfig":"259"},{"size":234,"mtime":1620013171938,"results":"287","hashOfConfig":"259"},{"size":6253,"mtime":1620015393006,"results":"288","hashOfConfig":"259"},{"size":2200,"mtime":1620000606190,"results":"289","hashOfConfig":"259"},{"size":160,"mtime":1620000607067,"results":"290","hashOfConfig":"259"},{"size":836,"mtime":1620015518699,"results":"291","hashOfConfig":"259"},{"size":1180,"mtime":1620000607066,"results":"292","hashOfConfig":"259"},{"size":2371,"mtime":1620013775198,"results":"293","hashOfConfig":"259"},{"size":280,"mtime":1620000603683,"results":"294","hashOfConfig":"259"},{"size":112,"mtime":1620001060479,"results":"295","hashOfConfig":"259"},{"size":345,"mtime":1620000607096,"results":"296","hashOfConfig":"259"},{"size":523,"mtime":1620000606197,"results":"297","hashOfConfig":"259"},{"size":2451,"mtime":1620017484178,"results":"298","hashOfConfig":"259"},{"filePath":"299","messages":"300","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"301"},"1ai12n0",{"filePath":"302","messages":"303","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"305","messages":"306","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"307"},{"filePath":"308","messages":"309","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"310"},{"filePath":"311","messages":"312","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"310"},{"filePath":"313","messages":"314","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"315","usedDeprecatedRules":"307"},{"filePath":"316","messages":"317","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"318","usedDeprecatedRules":"310"},{"filePath":"319","messages":"320","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"321","usedDeprecatedRules":"322"},{"filePath":"323","messages":"324","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"325"},{"filePath":"326","messages":"327","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"328","usedDeprecatedRules":"329"},{"filePath":"330","messages":"331","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"332","usedDeprecatedRules":"333"},{"filePath":"334","messages":"335","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"336","usedDeprecatedRules":"310"},{"filePath":"337","messages":"338","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"339","usedDeprecatedRules":"307"},{"filePath":"340","messages":"341","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"333"},{"filePath":"342","messages":"343","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"344","usedDeprecatedRules":"307"},{"filePath":"345","messages":"346","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"348","messages":"349","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"310"},{"filePath":"350","messages":"351","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"307"},{"filePath":"352","messages":"353","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"310"},{"filePath":"354","messages":"355","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"356","messages":"357","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"358","usedDeprecatedRules":"310"},{"filePath":"359","messages":"360","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"344","usedDeprecatedRules":"310"},{"filePath":"361","messages":"362","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"325"},{"filePath":"363","messages":"364","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"307"},{"filePath":"365","messages":"366","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"325"},{"filePath":"367","messages":"368","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"369","messages":"370","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"310"},{"filePath":"371","messages":"372","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"373","messages":"374","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"307"},{"filePath":"375","messages":"376","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"325"},{"filePath":"377","messages":"378","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"379","usedDeprecatedRules":"325"},{"filePath":"380","messages":"381","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"382","usedDeprecatedRules":"310"},{"filePath":"383","messages":"384","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"385","usedDeprecatedRules":"310"},{"filePath":"386","messages":"387","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"333"},{"filePath":"388","messages":"389","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"310"},{"filePath":"390","messages":"391","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"392","usedDeprecatedRules":"325"},{"filePath":"393","messages":"394","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"395"},{"filePath":"396","messages":"397","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"398","usedDeprecatedRules":"307"},{"filePath":"399","messages":"400","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"401","messages":"402","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"333"},{"filePath":"403","messages":"404","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"405","usedDeprecatedRules":"310"},{"filePath":"406","messages":"407","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"310"},{"filePath":"408","messages":"409","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"410","usedDeprecatedRules":"329"},{"filePath":"411","messages":"412","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"413","usedDeprecatedRules":"310"},{"filePath":"414","messages":"415","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"416","usedDeprecatedRules":"322"},{"filePath":"417","messages":"418","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"333"},{"filePath":"419","messages":"420","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"307"},{"filePath":"421","messages":"422","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"333"},{"filePath":"423","messages":"424","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"344","usedDeprecatedRules":"322"},{"filePath":"425","messages":"426","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"307"},{"filePath":"427","messages":"428","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"429","messages":"430","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"431","usedDeprecatedRules":"310"},{"filePath":"432","messages":"433","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"434"},{"filePath":"435","messages":"436","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"437","usedDeprecatedRules":"333"},{"filePath":"438","messages":"439","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"333"},{"filePath":"440","messages":"441","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"310"},{"filePath":"442","messages":"443","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"325"},{"filePath":"444","messages":"445","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"446","messages":"447","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"448","messages":"449","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"450","messages":"451","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"452","usedDeprecatedRules":"310"},{"filePath":"453","messages":"454","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"347"},{"filePath":"455","messages":"456","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"457","usedDeprecatedRules":"310"},{"filePath":"458","messages":"459","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"460","messages":"461","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"462","usedDeprecatedRules":"310"},{"filePath":"463","messages":"464","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"307"},{"filePath":"465","messages":"466","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"467","usedDeprecatedRules":"333"},{"filePath":"468","messages":"469","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"470","messages":"471","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"472","usedDeprecatedRules":"310"},{"filePath":"473","messages":"474","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"475","usedDeprecatedRules":"310"},{"filePath":"476","messages":"477","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"478","usedDeprecatedRules":"325"},{"filePath":"479","messages":"480","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"481","messages":"482","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"301"},{"filePath":"483","messages":"484","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"307"},{"filePath":"485","messages":"486","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"434"},{"filePath":"487","messages":"488","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"489","usedDeprecatedRules":"310"},{"filePath":"490","messages":"491","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"325"},{"filePath":"492","messages":"493","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"307"},{"filePath":"494","messages":"495","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"325"},{"filePath":"496","messages":"497","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"498","usedDeprecatedRules":"333"},{"filePath":"499","messages":"500","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"501","messages":"502","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"325"},{"filePath":"503","messages":"504","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"505","messages":"506","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"507","usedDeprecatedRules":"333"},{"filePath":"508","messages":"509","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"325"},{"filePath":"510","messages":"511","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"325"},{"filePath":"512","messages":"513","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"514","usedDeprecatedRules":"307"},{"filePath":"515","messages":"516","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"325"},{"filePath":"517","messages":"518","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"310"},{"filePath":"519","messages":"520","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"521","usedDeprecatedRules":"307"},{"filePath":"522","messages":"523","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"524","messages":"525","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"301"},{"filePath":"526","messages":"527","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"333"},{"filePath":"528","messages":"529","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"530","usedDeprecatedRules":"310"},{"filePath":"531","messages":"532","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"310"},{"filePath":"533","messages":"534","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"304"},{"filePath":"535","messages":"536","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"537","usedDeprecatedRules":"333"},{"filePath":"538","messages":"539","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"540","usedDeprecatedRules":"310"},{"filePath":"541","messages":"542","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"543","usedDeprecatedRules":"310"},{"filePath":"544","messages":"545","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"333"},{"filePath":"546","messages":"547","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"548","usedDeprecatedRules":"307"},{"filePath":"549","messages":"550","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"333"},{"filePath":"551","messages":"552","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"322"},{"filePath":"553","messages":"554","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"555","usedDeprecatedRules":"325"},{"filePath":"556","messages":"557","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"558","usedDeprecatedRules":"310"},{"filePath":"559","messages":"560","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"561","usedDeprecatedRules":"310"},{"filePath":"562","messages":"563","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"564","usedDeprecatedRules":"307"},{"filePath":"565","messages":"566","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"567","messages":"568","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"569"},"fwvb5s",{"filePath":"570","messages":"571","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"572","usedDeprecatedRules":"569"},{"filePath":"573","messages":"574","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"569"},{"filePath":"575","messages":"576","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"569"},{"filePath":"577","messages":"578","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"579","usedDeprecatedRules":"580"},{"filePath":"581","messages":"582","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"583","usedDeprecatedRules":"569"},{"filePath":"584","messages":"585","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"586","messages":"587","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"588","messages":"589","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"569"},{"filePath":"590","messages":"591","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"592","usedDeprecatedRules":"569"},{"filePath":"593","messages":"594","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"595"},{"filePath":"596","messages":"597","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"598","usedDeprecatedRules":"569"},{"filePath":"599","messages":"600","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"601","messages":"602","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"603","messages":"604","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"605"},{"filePath":"606","messages":"607","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"608","messages":"609","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"610","messages":"611","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"569"},{"filePath":"612","messages":"613","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"614","messages":"615","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"616","messages":"617","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"580"},{"filePath":"618","messages":"619","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"620","messages":"621","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"569"},{"filePath":"622","messages":"623","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"595"},{"filePath":"624","messages":"625","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"626","messages":"627","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"595"},{"filePath":"628","messages":"629","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"605"},{"filePath":"630","messages":"631","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"632","messages":"633","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"569"},{"filePath":"634","messages":"635","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"636","messages":"637","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"638","messages":"639","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"595"},{"filePath":"640","messages":"641","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"642","messages":"643","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"644","usedDeprecatedRules":"605"},{"filePath":"645","messages":"646","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"647","messages":"648","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"649","messages":"650","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"569"},{"filePath":"651","messages":"652","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"653","messages":"654","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"655","messages":"656","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/jessica/Desktop/TCC/consig/frontend/src/App.tsx",[],[],"/Users/jessica/Desktop/TCC/consig/frontend/src/styles/global.ts",[],[],"/Users/jessica/Desktop/TCC/consig/frontend/src/hooks/toast.tsx",[],[],"/Users/jessica/Desktop/TCC/consig/frontend/src/routes/Route.tsx",[],[],"/Users/jessica/Desktop/TCC/consig/frontend/src/services/api.ts",[],"/Users/jessica/Desktop/TCC/consig/frontend/src/pages/Users/index.tsx",["657"],"/* eslint-disable no-unused-expressions */\n/* eslint-disable @typescript-eslint/no-empty-function */\nimport React, { useState, useEffect } from 'react'\nimport { FiUser, FiUsers, FiPlus } from 'react-icons/fi'\nimport { Link } from 'react-router-dom'\nimport 'react-confirm-alert/src/react-confirm-alert.css'\nimport { useToast } from '../../hooks/toast'\nimport 'react-toastify/dist/ReactToastify.css'\nimport Sidebar from '../../components/Sidebar'\nimport Header from '../../components/Header'\nimport ListItem from '../../components/ListItem'\nimport ModalEditUser from '../../components/ModalEditUser'\nimport TitleContent from '../../components/TitleContent'\n\nimport api from '../../services/api'\n\nimport {\n  Container,\n  MainContent,\n  RightContent,\n  LeftContent,\n  ButtonContent\n} from './styles'\n\ninterface IUser {\n  id: string\n  name: string\n  email: string\n  occupation: string\n  functional: string\n}\n\ninterface IUserEdit {\n  name: string\n  email: string\n  occupation: string\n  functional: string\n}\n\nconst Dashboard: React.FC = () => {\n  const [users, setUsers] = useState<IUser[]>([])\n  const [editingUser, setEditingUser] = useState<IUser>({} as IUser)\n  const [editModalOpen, setEditModalOpen] = useState(false)\n  const { addToast } = useToast()\n\n  async function handleUpdateUser(user: Omit<IUser, 'id'>): Promise<void> {\n    try {\n      const { id } = editingUser\n\n      console.log('editingUser')\n      console.log(editingUser)\n\n      const { data } = await api.put<IUser>(`/users/${id}`, {\n        ...user\n      })\n\n      const updatedUsers = users.map(user => (user.id === id ? data : user))\n\n      setUsers(updatedUsers)\n\n      addToast({\n        type: 'success',\n        title: 'Usuário alterado',\n        description: 'O usuário foi alterado com sucesso.'\n      })\n    } catch (err) {\n      console.log(err)\n    }\n  }\n\n  useEffect(() => {\n    api.get('users').then(response => {\n      setUsers(response.data)\n    })\n  }, [])\n\n  async function handleDeleteUser(id: string): Promise<void> {\n    const result = window.confirm('Deseja deletar esse usuário?')\n\n    if (result) {\n      try {\n        await api.delete(`/users/${id}`)\n\n        const allUsers = users.filter(user => user.id !== id)\n\n        setUsers(allUsers)\n\n        addToast({\n          type: 'success',\n          title: 'Usuário Deletado',\n          description: 'O usuário foi deletado com sucesso.'\n        })\n      } catch (error) {\n        console.log(error)\n      }\n    }\n  }\n\n  function toggleEditModal(): void {\n    setEditModalOpen(!editModalOpen)\n  }\n\n  function handleEditUser(user: IUser): void {\n    toggleEditModal()\n    setEditingUser(user)\n    console.log(user)\n  }\n\n  return (\n    <>\n      <ModalEditUser\n        isOpen={editModalOpen}\n        setIsOpen={toggleEditModal}\n        editingUser={editingUser}\n        handleUpdateUser={handleUpdateUser}\n      />\n\n      <Container>\n        <Sidebar />\n        <Header />\n        <MainContent>\n          <LeftContent />\n          <RightContent>\n            <TitleContent\n              icon={FiUsers}\n              title=\"Usuários Cadastrados\"\n              subtitle=\"Veja todos os usuários cadastrados no sistema.\"\n            />\n            <ButtonContent>\n              <Link to=\"/signup\">\n                <FiPlus /> Cadastrar Usuário\n              </Link>\n            </ButtonContent>\n            {users &&\n              users.map(user => {\n                return (\n                  <ListItem\n                    key={user.id}\n                    icon={FiUser}\n                    user={user}\n                    handleDelete={handleDeleteUser}\n                    handleEdit={handleEditUser}\n                  />\n                )\n              })}\n          </RightContent>\n        </MainContent>\n      </Container>\n    </>\n  )\n}\n\nexport default Dashboard\n","/Users/jessica/Desktop/TCC/consig/frontend/src/pages/Success/index.tsx",["658"],"import React, { useState } from 'react'\nimport Lottie from 'react-lottie'\nimport { Link } from 'react-router-dom'\nimport { FiArrowLeft } from 'react-icons/fi'\n\nimport animationData from '../../assets/lottie-animations/sucess-animation.json'\n\nimport { Container, ImageBlock } from './styles'\n\nconst Success: React.FC = () => {\n  const [animationState, setAnimationState] = useState({\n    isStoped: false,\n    isPaused: false\n  })\n\n  const defaultOptions = {\n    loop: false,\n    autoplay: true,\n    animationData: animationData,\n    rendererSettings: {\n      preserveAspectRatio: 'xMidYMid slice'\n    }\n  }\n\n  return (\n    <Container>\n      <ImageBlock>\n        <Lottie\n          options={defaultOptions}\n          height={200}\n          width={200}\n          isPaused={animationState.isPaused}\n        />\n        <h1>Cadastro concluído</h1>\n        <h6>O cadastro foi efetuado com sucesso!</h6>\n        <Link to=\"/users\">\n          <FiArrowLeft /> Voltar\n        </Link>\n      </ImageBlock>\n    </Container>\n  )\n}\n\nexport default Success\n","/Users/jessica/Desktop/TCC/consig/frontend/src/pages/ForgotPassword/index.tsx",["659"],"import React, { useRef, useCallback, useState } from 'react'\nimport { FiMail } from 'react-icons/fi'\nimport { Form } from '@unform/web'\nimport { FormHandles } from '@unform/core'\nimport { Link } from 'react-router-dom'\nimport * as Yup from 'yup'\n\nimport { useToast } from '../../hooks/toast'\nimport Input from '../../components/Input'\nimport Button from '../../components/Button'\nimport getValidationErrors from '../../utils/getValidationErrors'\n\nimport { Container, Wrapper } from './styles'\nimport ForgotPasswordImage from '../../assets/images/forgot-password-new2.svg'\nimport GoBackArrow from '../../assets/images/goback-arrow.svg'\n\nimport api from '../../services/api'\n\ninterface ForgotPasswordFormData {\n  email: string\n}\n\nconst ForgotPassword: React.FC = () => {\n  const [loading, setLoading] = useState<boolean>(false)\n  const formRef = useRef<FormHandles>(null)\n\n  const { addToast } = useToast()\n\n  const handleSubmit = useCallback(\n    async (data: ForgotPasswordFormData) => {\n      try {\n        setLoading(true)\n        formRef.current?.setErrors({})\n        const schema = Yup.object().shape({\n          email: Yup.string()\n            .email('Digite email válido')\n            .required('Email obrigatório')\n        })\n\n        await schema.validate(data, {\n          abortEarly: false\n        })\n\n        await api.post('/password/forgot', {\n          email: data.email\n        })\n\n        addToast({\n          type: 'success',\n          title: 'Email de recuperação enviado',\n          description: 'Enviamos um email para confirmar a recuperação de senha'\n        })\n      } catch (err) {\n        if (err instanceof Yup.ValidationError) {\n          const errors = getValidationErrors(err)\n\n          formRef.current?.setErrors(errors)\n\n          return\n        }\n\n        addToast({\n          type: 'error',\n          title: 'Erro na recuperação de senha',\n          description: 'Ocorreu um erro ao tentar recuperar a senha'\n        })\n      } finally {\n        formRef.current?.setFieldValue('email', '')\n        setLoading(false)\n      }\n    },\n    [addToast]\n  )\n\n  return (\n    <div>\n      <main>\n        <Container>\n          <Wrapper>\n            <a href=\"/\">\n              <img src={GoBackArrow} alt=\"Go Back\" />\n            </a>\n            <h1>Recuperar Senha</h1>\n            <Form ref={formRef} onSubmit={handleSubmit}>\n              <Input\n                name=\"email\"\n                type=\"email\"\n                placeholder=\"Email\"\n                icon={FiMail}\n              />\n\n              <Button loading={loading} type=\"submit\">\n                Recuperar\n              </Button>\n            </Form>\n          </Wrapper>\n          <img src={ForgotPasswordImage} alt=\"Forgot Password Image\" />\n        </Container>\n      </main>\n    </div>\n  )\n}\n\nexport default ForgotPassword\n",[],"/Users/jessica/Desktop/TCC/consig/frontend/src/pages/Suplier/index.tsx",[],[],"/Users/jessica/Desktop/TCC/consig/frontend/src/pages/CreateSuplier/index.tsx",["660","661"],"import React, { useCallback, useRef, useState } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { Form } from '@unform/web'\nimport { FormHandles } from '@unform/core'\nimport * as Yup from 'yup'\nimport { FiArrowLeft, FiTruck } from 'react-icons/fi'\n\nimport getValidationErrors from '../../utils/getValidationErrors'\nimport { useToast } from '../../hooks/toast'\n\nimport GoBackArrow from '../../assets/images/goback-arrow.svg'\nimport SupliersImage from '../../assets/images/supliers.svg'\n\nimport Input from '../../components/Input'\nimport InputMask from '../../components/InputMask'\nimport Button from '../../components/Button'\nimport Sidebar from '../../components/Sidebar'\nimport Header from '../../components/Header'\n\nimport api from '../../services/api'\nimport removeMask from '../../helpers/removeMask'\n\nimport {\n  Container,\n  Title,\n  MainContent,\n  RightContent,\n  LeftContent,\n  TitleContent,\n  RightContentInside,\n  Label\n} from './styles'\n\ninterface SuplierFormData {\n  companyName: string\n  cnpj: string\n  address: string\n  phone: string\n  avaible: boolean\n}\nconst CreateSuplier: React.FC = () => {\n  const [loading, setLoading] = useState(false)\n  const formRef = useRef<FormHandles>(null)\n  const { addToast } = useToast()\n  const history = useHistory()\n  const { goBack } = useHistory()\n\n  const handleCreateSuplier = useCallback(\n    async ({ companyName, cnpj, address, phone, avaible }: SuplierFormData) => {\n      try {\n        formRef.current?.setErrors({})\n        const schema = Yup.object().shape({\n          companyName: Yup.string().required('Nome da empresa Obrigatório'),\n          cnpj: Yup.string().required('CNPJ obrigatório'),\n          address: Yup.string().required('Endereço Obrigatório'),\n          phone: Yup.string().required('Telefone Obrigatório')\n        })\n\n        await schema.validate(\n          { companyName, cnpj, address, phone, avaible },\n          {\n            abortEarly: false\n          }\n        )\n\n        await api.post('/supliers', {\n          companyName,\n          cnpj: removeMask(cnpj),\n          address,\n          phone: removeMask(phone),\n          avaible: true\n        })\n        addToast({\n          type: 'success',\n          title: 'Cadastro Realizado',\n          description: 'Cadastro realizado com sucesso'\n        })\n\n        history.push('/supliers')\n      } catch (err) {\n        const errors = getValidationErrors(err)\n\n        formRef.current?.setErrors(errors)\n\n        addToast({\n          type: 'error',\n          title: 'Erro no cadastro',\n          description: 'Ocorreu um erro ao fazer o cadastro, tente novamente'\n        })\n      }\n    },\n    [addToast, history]\n  )\n\n  return (\n    <div>\n      <main>\n        <Container>\n          <Sidebar />\n          <Header />\n          <MainContent>\n            <LeftContent />\n            <RightContent>\n              <RightContentInside>\n                <button type=\"button\" onClick={goBack}>\n                  <FiArrowLeft size={24} />\n                </button>\n                <TitleContent>\n                  <FiTruck />\n                  <Title>Faça o Cadastro do Fornecedor</Title>\n                </TitleContent>\n                <Form ref={formRef} onSubmit={handleCreateSuplier}>\n                  <Label>Nome da empresa</Label>\n                  <Input\n                    name=\"companyName\"\n                    type=\"text\"\n                    placeholder=\"Nome da Empresa\"\n                  />\n\n                  <Label>CNPJ</Label>\n                  <InputMask\n                    name=\"cnpj\"\n                    mask=\"99.999.999/9999-99\"\n                    placeholder=\"CNPJ\"\n                  />\n\n                  <Label>Endereço</Label>\n                  <Input name=\"address\" type=\"text\" placeholder=\"Endereço\" />\n\n                  <Label>Telefone</Label>\n                  <InputMask\n                    name=\"phone\"\n                    mask=\"99999-9999\"\n                    placeholder=\"Telefone\"\n                  />\n\n                  <Button loading={loading} type=\"submit\">\n                    Cadastrar\n                  </Button>\n                </Form>\n              </RightContentInside>\n              <img src={SupliersImage} alt=\"User Image\" />\n            </RightContent>\n          </MainContent>\n        </Container>\n      </main>\n    </div>\n  )\n}\n\nexport default CreateSuplier\n",[],"/Users/jessica/Desktop/TCC/consig/frontend/src/pages/Batchs/index.tsx",["662","663"],"/* eslint-disable camelcase */\n/* eslint-disable no-unused-expressions */\n/* eslint-disable @typescript-eslint/no-empty-function */\nimport React, { useState, useEffect } from 'react'\nimport { FiPackage, FiPlus } from 'react-icons/fi'\nimport { GoPackage } from 'react-icons/go'\nimport { Link } from 'react-router-dom'\nimport 'react-confirm-alert/src/react-confirm-alert.css'\nimport { useToast } from '../../hooks/toast'\nimport 'react-toastify/dist/ReactToastify.css'\n\nimport Sidebar from '../../components/Sidebar'\nimport Header from '../../components/Header'\nimport ListItemBatch from '../../components/LIstItemBatch'\nimport ModalEditBatch from '../../components/ModalEditBatch'\n\nimport api from '../../services/api'\n\nimport {\n  Container,\n  Title,\n  SubTitle,\n  MainContent,\n  RightContent,\n  LeftContent,\n  TitleContent,\n  ButtonContent,\n  ItemBox\n} from './styles'\n\ninterface ISuplier {\n  id: string\n  companyName: string\n  cnpj: string\n  address: string\n  phone: string\n  available: boolean\n}\n\ninterface IBatch {\n  id: string\n  batch_number: string\n  delivery_date: string\n  description: string\n  suplier: ISuplier\n  available: boolean\n}\n\ninterface IBatchEdit {\n  id: string\n  batch_number: string\n  delivery_date: string\n  description: string\n  suplier: string\n  available: boolean\n}\n\nconst Batchs: React.FC = () => {\n  const [batchs, setBatchs] = useState<IBatch[]>([])\n  const [editingBatch, setEditingBatch] = useState<IBatch>({} as IBatch)\n  const [editModalOpen, setEditModalOpen] = useState(false)\n  const { addToast } = useToast()\n\n  async function handleUpdateBatch(batch: Omit<IBatch, 'id'>): Promise<void> {\n    try {\n      const { id } = editingBatch\n\n      console.log('editingBatch')\n      console.log(editingBatch)\n\n      const { data } = await api.put<IBatch>(`/batchs/${id}`, {\n        ...batch\n      })\n\n      const updatedBatchs = batchs.map(batch =>\n        batch.id === id ? data : batch\n      )\n\n      setBatchs(updatedBatchs)\n\n      addToast({\n        type: 'success',\n        title: 'Lote alterado',\n        description: 'O lote foi alterado com sucesso.'\n      })\n    } catch (err) {\n      addToast({\n        type: 'error',\n        title: 'Lote não foi alterado',\n        description: 'Ocorreu um erro e não foi possível alterar o lote.'\n      })\n\n      console.log(err)\n    }\n  }\n\n  useEffect(() => {\n    api.get('batchs').then(response => {\n      setBatchs(response.data)\n    })\n  }, [])\n\n  async function handleDeleteBatch(id: string): Promise<void> {\n    const result = window.confirm('Deseja deletar esse usuário?')\n\n    if (result) {\n      try {\n        await api.delete(`/batchs/${id}`)\n\n        const allBatchs = batchs.filter(batch => batch.id !== id)\n\n        setBatchs(allBatchs)\n\n        addToast({\n          type: 'success',\n          title: 'Lote Deletado',\n          description: 'O lote foi deletado com sucesso.'\n        })\n      } catch (error) {\n        console.log(error)\n        addToast({\n          type: 'error',\n          title: 'Erro',\n          description: 'Não foi possível deletar o lote desejado.'\n        })\n      }\n    }\n  }\n\n  function toggleEditModal(): void {\n    setEditModalOpen(!editModalOpen)\n  }\n\n  function handleEditBatch(batch: IBatch): void {\n    toggleEditModal()\n    setEditingBatch(batch)\n    console.log(batch)\n  }\n\n  return (\n    <>\n      <ModalEditBatch\n        isOpen={editModalOpen}\n        setIsOpen={toggleEditModal}\n        editingBatch={editingBatch}\n        handleUpdateBatch={handleUpdateBatch}\n      />\n\n      <Container>\n        <Sidebar />\n        <Header />\n        <MainContent>\n          <LeftContent />\n          <RightContent>\n            <TitleContent>\n              <GoPackage />\n              <Title>Lotes</Title>\n              <SubTitle>| Veja todos os lotes cadastrados no sistema.</SubTitle>\n            </TitleContent>\n            <ButtonContent>\n              <Link to=\"/create-batch\">\n                <FiPlus /> Cadastrar Lote\n              </Link>\n            </ButtonContent>\n            <ItemBox>\n              {batchs &&\n                batchs.map(batch => {\n                  return (\n                    <ListItemBatch\n                      key={batch.id}\n                      icon={FiPackage}\n                      batch={batch}\n                      handleEdit={handleEditBatch}\n                    />\n                  )\n                })}\n            </ItemBox>\n          </RightContent>\n        </MainContent>\n      </Container>\n    </>\n  )\n}\n\nexport default Batchs\n",[],"/Users/jessica/Desktop/TCC/consig/frontend/src/pages/CreateSurgery/index.tsx",["664"],"/* eslint-disable camelcase */\nimport React, { useCallback, useRef, useState } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { Form } from '@unform/web'\nimport { FormHandles } from '@unform/core'\nimport * as Yup from 'yup'\nimport { FiArrowLeft } from 'react-icons/fi'\nimport { GiScalpel } from 'react-icons/gi'\n\nimport getValidationErrors from '../../utils/getValidationErrors'\nimport { useToast } from '../../hooks/toast'\n\nimport SurgeriesImage from '../../assets/images/surgeries.svg'\n\nimport Input from '../../components/Input'\nimport InputSelectSimple from '../../components/InputSelectSimple'\nimport Button from '../../components/Button'\nimport Sidebar from '../../components/Sidebar'\nimport Header from '../../components/Header'\n\nimport api from '../../services/api'\n\nimport {\n  Container,\n  Title,\n  MainContent,\n  RightContent,\n  LeftContent,\n  TitleContent,\n  RightContentInside,\n  Label\n} from './styles'\n\ninterface SurgeryFormData {\n  doctor: string\n  surgery_date: string\n  specialty: string\n  status: string\n}\nconst CreateSurgery: React.FC = () => {\n  const [loading, setLoading] = useState(false)\n  const formRef = useRef<FormHandles>(null)\n  const { addToast } = useToast()\n  const history = useHistory()\n  const { goBack } = useHistory()\n\n  const optionsSelect = [\n    { value: 'confirmada', label: 'CONFIRMADA' },\n    { value: 'prevista', label: 'PREVISTA' },\n    { value: 'em andamento', label: 'EM ANDAMENTO' },\n    { value: 'finalizada', label: 'FINALIZADA' }\n  ]\n\n  const handleCreateSurgery = useCallback(\n    async (data: SurgeryFormData) => {\n      try {\n        formRef.current?.setErrors({})\n        const schema = Yup.object().shape({\n          doctor: Yup.string().required('Nome do doutor é Obrigatório'),\n          surgery_date: Yup.string().required('Data da cirurgia é obrigatória'),\n          specialty: Yup.string().required('Indique uma especialidade'),\n          status: Yup.string().required('Indique o status da cirurgia')\n        })\n\n        await schema.validate(data, {\n          abortEarly: false\n        })\n\n        await api.post('/surgeries', data)\n        addToast({\n          type: 'success',\n          title: 'Cadastro Realizado',\n          description: 'Cadastro realizado com sucesso'\n        })\n\n        history.push('/surgeries')\n      } catch (err) {\n        const errors = getValidationErrors(err)\n\n        formRef.current?.setErrors(errors)\n\n        addToast({\n          type: 'error',\n          title: 'Erro no cadastro',\n          description: 'Ocorreu um erro ao fazer o cadastro, tente novamente'\n        })\n      }\n    },\n    [addToast, history]\n  )\n\n  return (\n    <div>\n      <main>\n        <Container>\n          <Sidebar />\n          <Header />\n          <MainContent>\n            <LeftContent />\n            <RightContent>\n              <RightContentInside>\n                <button type=\"button\" onClick={goBack}>\n                  <FiArrowLeft size={24} />\n                </button>\n                <TitleContent>\n                  <GiScalpel />\n                  <Title>Faça o Cadastro da Cirurgia</Title>\n                </TitleContent>\n                <Form ref={formRef} onSubmit={handleCreateSurgery}>\n                  <Label>Nome do médico</Label>\n                  <Input name=\"doctor\" type=\"text\" />\n\n                  <Label>Data da cirurgia</Label>\n                  <Input name=\"surgery_date\" type=\"date\" />\n\n                  <Label>Especialidade</Label>\n                  <Input name=\"specialty\" type=\"text\" />\n\n                  <Label>Status</Label>\n                  <InputSelectSimple\n                    name=\"status\"\n                    loadOptions={optionsSelect}\n                    defaultOptions={optionsSelect}\n                  />\n\n                  <Button loading={loading} type=\"submit\">\n                    Cadastrar\n                  </Button>\n                </Form>\n              </RightContentInside>\n              <img src={SurgeriesImage} alt=\"Surgery Image\" />\n            </RightContent>\n          </MainContent>\n        </Container>\n      </main>\n    </div>\n  )\n}\n\nexport default CreateSurgery\n","/Users/jessica/Desktop/TCC/consig/frontend/src/pages/Users/styles.ts",["665"],"import styled from 'styled-components'\nimport { shade, lighten } from 'polished'\n\nexport const Container = styled.div`\n  width: 100vw;\n  height: 100vh;\n`\n\nexport const SubTitle = styled.h3`\n  font: 400 1rem Nunito, sans-serif;\n  color: ${({ theme }) => theme.colors.text};\n  font-size: 1rem;\n  margin-top: 0.8rem;\n`\n\nexport const MainContent = styled.main`\n  width: 100vw;\n  min-height: 100vh;\n  display: grid;\n  grid-template-columns: 1fr 4fr;\n  grid-gap: 2rem;\n`\nexport const LeftContent = styled.div``\n\nexport const RightContent = styled.div`\n  width: 100%;\n`\n\nexport const ButtonContent = styled.div`\n  width: 100%;\n  flex-direction: row;\n  display: flex;\n  margin: 2rem 0;\n\n  > a {\n    color: ${({ theme }) => theme.colors.white};\n    font: 700 1rem Nunito, sans-serif;\n    margin-top: 2.5rem;\n    text-decoration: none;\n    transition: color 0.2s;\n    align-items: center;\n    justify-content: center;\n    transition: color 0.2s;\n    background: ${({ theme }) => theme.colors.pink};\n    padding: 0.5rem;\n    border-radius: 0.5rem;\n    cursor: pointer;\n    &:hover {\n      background: ${({ theme }) => shade(0.1, theme.colors.pink)};\n    }\n  }\n`\n\nexport const Pagination = styled.div`\n  display: flex;\n  min-width: 500px;\n  justify-content: space-between;\n`\n\nexport const PaginationButton = styled.div`\n  display: flex;\n`\n\nexport const PaginationItem = styled.button`\n  margin: 0 10px;\n  cursor: pointer;\n`\n","/Users/jessica/Desktop/TCC/consig/frontend/src/pages/SignUp/styles.ts",[],"/Users/jessica/Desktop/TCC/consig/frontend/src/pages/CreateSurgery/styles.ts",["666"],"import styled from 'styled-components'\nimport { shade, lighten } from 'polished'\n\nexport const Container = styled.div`\n  width: 100vw;\n  height: 100vh;\n`\n\nexport const Title = styled.h1`\n  font: 700 1rem Nunito, sans-serif;\n  color: ${({ theme }) => theme.colors.darkBlue};\n  font-size: 2rem;\n  margin-right: 1rem;\n`\nexport const MainContent = styled.main`\n  width: 100vw;\n  min-height: 100vh;\n  display: grid;\n  grid-template-columns: 1fr 4fr;\n  grid-gap: 2rem;\n`\nexport const LeftContent = styled.div``\n\nexport const RightContent = styled.div`\n  width: 100%;\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  grid-gap: 2rem;\n\n  img {\n    width: 70%;\n    align-items: center;\n    margin: auto;\n  }\n`\n\nexport const RightContentInside = styled.div`\n  button {\n    border: none;\n    margin-top: 2rem;\n\n    svg {\n      color: ${({ theme }) => theme.colors.darkBlue};\n\n      &:hover {\n        color: ${({ theme }) => lighten(0.5, theme.colors.darkBlue)};\n      }\n    }\n  }\n`\n\nexport const TitleContent = styled.div`\n  width: 100%;\n  flex-direction: row;\n  display: flex;\n  margin: 2rem 0;\n\n  svg {\n    background: ${({ theme }) => lighten(0.5, theme.colors.darkBlue)};\n    color: ${({ theme }) => theme.colors.darkBlue};\n    border-radius: 0.3rem;\n    width: 2rem;\n    height: 2rem;\n    padding: 3px;\n    margin-right: 1rem;\n  }\n`\nexport const Paragraph = styled.p`\n  color: ${({ theme }) => theme.colors.text};\n  font: 400 1rem Nunito, sans-serif;\n  margin-bottom: 2rem;\n\n  svg {\n    margin-right: 1rem;\n    color: ${({ theme }) => theme.colors.darkBlue};\n  }\n`\n\nexport const TitleParagraph = styled.p`\n  color: ${({ theme }) => theme.colors.text};\n  font: 400 1rem Nunito, sans-serif;\n  font-size: 2rem;\n  margin-bottom: 2rem;\n`\nexport const Label = styled.label`\n  color: ${props => props.theme.colors.text};\n  margin-bottom: 1rem;\n`\n","/Users/jessica/Desktop/TCC/consig/frontend/src/utils/getValidationErrors.ts",[],[],"/Users/jessica/Desktop/TCC/consig/frontend/src/pages/Batchs/styles.ts",[],"/Users/jessica/Desktop/TCC/consig/frontend/src/pages/Surgeries/styles.ts",[],"/Users/jessica/Desktop/TCC/consig/frontend/src/components/Header/index.tsx",[],"/Users/jessica/Desktop/TCC/consig/frontend/src/components/ModalEditUser/index.tsx",[],"/Users/jessica/Desktop/TCC/consig/frontend/src/components/InputSelect/index.tsx",["667","668","669"],"import React, { useCallback, useState, useRef, useEffect } from 'react'\nimport { useField } from '@unform/core'\nimport { FiAlertCircle } from 'react-icons/fi'\nimport Select from 'react-select/async'\nimport { Container, Error } from './styles'\nimport { Props } from './types'\n\ninterface Option {\n  value: string\n  label: string\n}\n\nconst InputSelect: React.FC<Props> = ({ name, ...rest }: Props) => {\n  const [isFocused, setIsFocused] = useState(false)\n  const [isFilled, setIsFilled] = useState(false)\n\n  const selectRef = useRef(null)\n  const { registerField, defaultValue, fieldName, error } = useField(name)\n\n  useEffect(() => {\n    registerField({\n      name: fieldName,\n      ref: selectRef.current,\n      getValue: (ref: any) => {\n        if (rest.cacheOptions) {\n          if (!ref.select.state.value) {\n            return []\n          }\n\n          return ref.select.state.value.map((option: Option) => option.value)\n        }\n        if (!ref.select.state.value) {\n          return ''\n        }\n\n        return ref.select.state.value.value\n      },\n      setValue: (ref: any, value: Option) => {\n        ref.select.select.selectOption(value)\n      },\n      clearValue: (ref: any) => {\n        ref.select.select.clearValue()\n      }\n    })\n  }, [fieldName, registerField, rest.cacheOptions])\n\n  const handleInputFocus = useCallback(() => {\n    setIsFocused(true)\n  }, [])\n\n  const handleInputBlur = useCallback(() => {\n    setIsFocused(false)\n\n    setIsFilled(!!selectRef?.current)\n  }, [])\n\n  const handleInputChange = useCallback(() => {\n    setIsFilled(!!selectRef?.current)\n  }, [])\n\n  return (\n    <Container\n      isFilled={isFilled}\n      isFocused={isFocused}\n      hasError={!!error}\n      aria-label={`${name}-container`}\n    >\n      <Select\n        ref={selectRef}\n        name={name}\n        defaultValue={defaultValue}\n        onFocus={handleInputFocus}\n        onBlur={handleInputBlur}\n        onChange={handleInputChange}\n        classNamePrefix=\"react-select\"\n        {...rest}\n      />\n      {error && (\n        <Error title={error}>\n          <FiAlertCircle color=\"#c53030\" size={20} />\n        </Error>\n      )}\n    </Container>\n  )\n}\n\nexport default InputSelect\n","/Users/jessica/Desktop/TCC/consig/frontend/src/pages/CreateSuplier/styles.ts",["670"],"/Users/jessica/Desktop/TCC/consig/frontend/src/pages/Suplier/styles.ts",[],"/Users/jessica/Desktop/TCC/consig/frontend/src/pages/Dashboard/styles.ts",[],"/Users/jessica/Desktop/TCC/consig/frontend/src/pages/ForgotPassword/styles.ts",[],"/Users/jessica/Desktop/TCC/consig/frontend/src/components/ModalEditUser/styles.ts",[],"/Users/jessica/Desktop/TCC/consig/frontend/src/components/InputSelect/styles.ts",[],"/Users/jessica/Desktop/TCC/consig/frontend/src/components/ListItemSurgery/index.tsx",[],"/Users/jessica/Desktop/TCC/consig/frontend/src/components/Sidebar/styles.ts",[],"/Users/jessica/Desktop/TCC/consig/frontend/src/components/Toast/index.tsx",[],"/Users/jessica/Desktop/TCC/consig/frontend/src/components/ListItemMaterial/styles.ts",["671"],"import styled, { css } from 'styled-components'\n\ninterface IPatientProps {\n  available: boolean\n}\n\nexport const Container = styled.div<IPatientProps>`\n  ${({ theme, available }) => css`\n    ${!available &&\n    css`\n      opacity: 0.5;\n    `}\n  `}\n\n  width: 95%;\n  height: 4rem;\n  background: ${({ theme }) => theme.colors.lightBlue};\n  justify-content: space-between;\n  border-radius: 0.5rem;\n  flex-direction: row;\n  display: grid;\n  grid-template-columns: 1fr 3fr 3fr 2fr 2fr;\n  align-items: center;\n  margin-bottom: 1rem;\n\n  svg {\n    color: ${({ theme }) => theme.colors.darkBlue};\n    margin-left: 1rem;\n  }\n\n  p {\n    color: ${({ theme }) => theme.colors.darkBlue};\n    font: 400 16px Roboto, sans-serif;\n  }\n`\n\nexport const ButtonBox = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  margin-right: 1rem;\n\n  .EditButton {\n    margin-top: 0;\n  }\n\n  button,\n  a {\n    background: transparent;\n    border: transparent;\n    cursor: pointer;\n\n    svg {\n      color: ${({ theme }) => theme.colors.darkBlue};\n    }\n  }\n\n  div.availability-container {\n    p {\n      display: none;\n    }\n\n    .switch {\n      position: relative;\n      display: inline-block;\n      width: 56px;\n      height: 16px;\n      margin-left: 12px;\n      & input {\n        opacity: 0;\n        width: 0;\n        height: 0;\n      }\n      .slider {\n        position: absolute;\n        cursor: pointer;\n        top: 0;\n        left: 0;\n        right: 0;\n        bottom: 0;\n        background-color: ${({ theme }) => theme.colors.red};\n        -webkit-transition: 0.4s;\n        transition: 0.4s;\n        border-radius: 16px;\n        &:before {\n          position: absolute;\n          content: '';\n          height: 11px;\n          width: 20px;\n          left: 1px;\n          bottom: 3px;\n          background-color: white;\n          -webkit-transition: 0.4s;\n          transition: 0.4s;\n          border-radius: 10px;\n        }\n      }\n\n      input:checked + .slider {\n        background-color: ${({ theme }) => theme.colors.darkBlue};\n      }\n      input:focus + .slider {\n        box-shadow: 0 0 1px #2196f3;\n      }\n      input:checked + .slider:before {\n        -webkit-transform: translateX(32px);\n        -ms-transform: translateX(32px);\n        transform: translateX(32px);\n      }\n    }\n  }\n`\n","/Users/jessica/Desktop/TCC/consig/frontend/src/components/ListItemSuplier/index.tsx",["672","673","674","675"],"/* eslint-disable camelcase */\n/* eslint-disable @typescript-eslint/ban-types */\nimport React, { useCallback, useState } from 'react'\nimport { FiList, FiEdit, FiTrash } from 'react-icons/fi'\nimport { IconBaseProps } from 'react-icons'\nimport { Link } from 'react-router-dom'\nimport includeMaskCNPJ from '../../helpers/includeMaskCNPJ'\nimport { Container, ButtonBox } from './styles'\n\nimport api from '../../services/api'\n\ninterface ISuplier {\n  id: string\n  companyName: string\n  cnpj: string\n  address: string\n  phone: string\n  avaible: boolean\n}\n\ninterface ISuplierToggle {\n  // id: string\n  companyName: string\n  cnpj: string\n  address: string\n  phone: string\n  avaible: boolean\n}\n\ninterface IProps {\n  suplier: ISuplier\n  icon?: React.ComponentType<IconBaseProps>\n  handleEdit: (user: ISuplier) => void\n}\n\nconst ListItem: React.FC<IProps> = ({\n  icon: Icon,\n  suplier,\n  handleEdit\n}: IProps) => {\n  const [isAvaible, setIsAvaible] = useState(suplier.avaible)\n\n  async function toggleAvaible(): Promise<void> {\n    try {\n      const { id, companyName, cnpj, address, phone, avaible } = suplier\n      await api.put(`/supliers/${id}`, {\n        companyName,\n        cnpj,\n        address,\n        phone,\n        avaible: !isAvaible\n      })\n\n      setIsAvaible(!isAvaible)\n    } catch (err) {\n      console.log('erro')\n      console.log(err.response.data)\n    }\n  }\n\n  function setEditingUser(): void {\n    handleEdit(suplier)\n  }\n\n  return (\n    <Container avaible={isAvaible}>\n      {Icon && <Icon />}\n      <p>{suplier.companyName}</p>\n      <p>{includeMaskCNPJ(suplier.cnpj)}</p>\n      <p>{suplier.phone}</p>\n      <ButtonBox>\n        <Link to={`/suplier/${suplier.id}`}>\n          <FiList />\n        </Link>\n        <button onClick={() => setEditingUser()}>\n          <FiEdit />\n        </button>\n        <div className=\"availability-container\">\n          <p>{isAvaible ? 'Disponível' : 'Indisponível'}</p>\n\n          <label htmlFor={`available-switch-${suplier.id}`} className=\"switch\">\n            <input\n              id={`available-switch-${suplier.id}`}\n              type=\"checkbox\"\n              checked={isAvaible}\n              onChange={toggleAvaible}\n              data-testid={`change-status-suplier-${suplier.id}`}\n            />\n            <span className=\"slider\" />\n          </label>\n        </div>\n      </ButtonBox>\n    </Container>\n  )\n}\n\nexport default ListItem\n","/Users/jessica/Desktop/TCC/consig/frontend/src/components/ListItemSurgery/styles.ts",["676"],"import styled, { css } from 'styled-components'\n\ninterface ISurgeryProps {\n  available: boolean\n}\n\nexport const Container = styled.div<ISurgeryProps>`\n  ${({ theme, available }) => css`\n    ${!available &&\n    css`\n      opacity: 0.5;\n    `}\n  `}\n  .previewClass {\n    background: ${({ theme }) => theme.colors.lightYellow};\n    border: 1px solid ${({ theme }) => theme.colors.yellow};\n\n    width: 95%;\n    height: 4rem;\n\n    justify-content: space-between;\n    border-radius: 0.5rem;\n    flex-direction: row;\n    display: grid;\n    grid-template-columns: 1fr 2fr 1fr 4fr 1fr;\n    align-items: center;\n    margin-bottom: 2rem;\n\n    svg {\n      color: ${({ theme }) => theme.colors.yellow};\n      margin-left: 1rem;\n    }\n\n    p {\n      color: ${({ theme }) => theme.colors.yellow};\n      font: 400 16px Roboto, sans-serif;\n    }\n  }\n\n  .isGoingClass {\n    background: ${({ theme }) => theme.colors.lightBlue};\n    border: 1px solid ${({ theme }) => theme.colors.darkBlue};\n\n    width: 95%;\n    height: 4rem;\n\n    justify-content: space-between;\n    border-radius: 0.5rem;\n    flex-direction: row;\n    display: grid;\n    grid-template-columns: 1fr 2fr 1fr 4fr 1fr;\n    align-items: center;\n    margin-bottom: 2rem;\n\n    svg {\n      color: ${({ theme }) => theme.colors.darkBlue};\n      margin-left: 1rem;\n    }\n\n    p {\n      color: ${({ theme }) => theme.colors.darkBlue};\n      font: 400 16px Roboto, sans-serif;\n    }\n  }\n\n  .canceledClass {\n    background: ${({ theme }) => theme.colors.lightRed};\n    border: 1px solid ${({ theme }) => theme.colors.red};\n\n    width: 95%;\n    height: 4rem;\n\n    justify-content: space-between;\n    border-radius: 0.5rem;\n    flex-direction: row;\n    display: grid;\n    grid-template-columns: 1fr 2fr 1fr 4fr 1fr;\n    align-items: center;\n    margin-bottom: 2rem;\n\n    svg {\n      color: ${({ theme }) => theme.colors.red};\n      margin-left: 1rem;\n    }\n\n    p {\n      color: ${({ theme }) => theme.colors.red};\n      font: 400 16px Roboto, sans-serif;\n    }\n  }\n\n  .completedClass {\n    background: ${({ theme }) => theme.colors.lightGreen};\n    border: 1px solid ${({ theme }) => theme.colors.greenMiddle};\n\n    width: 95%;\n    height: 4rem;\n\n    justify-content: space-between;\n    border-radius: 0.5rem;\n    flex-direction: row;\n    display: grid;\n    grid-template-columns: 1fr 2fr 1fr 4fr 1fr;\n    align-items: center;\n    margin-bottom: 2rem;\n\n    svg {\n      color: ${({ theme }) => theme.colors.greenMiddle};\n      margin-left: 1rem;\n    }\n\n    p {\n      color: ${({ theme }) => theme.colors.greenMiddle};\n      font: 400 16px Roboto, sans-serif;\n    }\n  }\n`\n\nexport const ButtonBox = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  margin-right: 1rem;\n\n  button,\n  a {\n    background: transparent;\n    border: transparent;\n    cursor: pointer;\n\n    svg {\n      color: ${({ theme }) => theme.colors.darkBlue};\n    }\n  }\n\n  div.availability-container {\n    p {\n      display: none;\n    }\n\n    .switch {\n      position: relative;\n      display: inline-block;\n      width: 56px;\n      height: 16px;\n      margin-left: 12px;\n      & input {\n        opacity: 0;\n        width: 0;\n        height: 0;\n      }\n      .slider {\n        position: absolute;\n        cursor: pointer;\n        top: 0;\n        left: 0;\n        right: 0;\n        bottom: 0;\n        background-color: ${({ theme }) => theme.colors.red};\n        -webkit-transition: 0.4s;\n        transition: 0.4s;\n        border-radius: 16px;\n        &:before {\n          position: absolute;\n          content: '';\n          height: 11px;\n          width: 20px;\n          left: 1px;\n          bottom: 3px;\n          background-color: white;\n          -webkit-transition: 0.4s;\n          transition: 0.4s;\n          border-radius: 10px;\n        }\n      }\n\n      input:checked + .slider {\n        background-color: ${({ theme }) => theme.colors.darkBlue};\n      }\n      input:focus + .slider {\n        box-shadow: 0 0 1px #2196f3;\n      }\n      input:checked + .slider:before {\n        -webkit-transform: translateX(32px);\n        -ms-transform: translateX(32px);\n        transform: translateX(32px);\n      }\n    }\n  }\n`\n","/Users/jessica/Desktop/TCC/consig/frontend/src/components/InputMask/styles.ts",[],"/Users/jessica/Desktop/TCC/consig/frontend/src/components/Menu/styles.ts",[],"/Users/jessica/Desktop/TCC/consig/frontend/src/components/MenuItem/index.tsx",["677"],"import React, { useState } from 'react'\nimport { IconBaseProps } from 'react-icons'\n\nimport { Container, Item, NameLink, active } from './styles'\n\ninterface ItemProps {\n  name: string\n  icon: React.ComponentType<IconBaseProps>\n  link: string\n}\n\nconst MenuItem: React.FC<ItemProps> = ({ icon: Icon, name, link }) => {\n  return (\n    <Container>\n      <Item exact activeClassName={active} to={link}>\n        {Icon && <Icon />}\n        <NameLink>{name}</NameLink>\n      </Item>\n    </Container>\n  )\n}\n\nexport default MenuItem\n","/Users/jessica/Desktop/TCC/consig/frontend/src/components/MenuItem/styles.ts",[],[],"/Users/jessica/Desktop/TCC/consig/frontend/src/components/ListItemMaterial/index.tsx",["678","679","680","681"],"/* eslint-disable camelcase */\n/* eslint-disable @typescript-eslint/ban-types */\nimport React, { useState } from 'react'\nimport { FiList, FiEdit, FiTrash } from 'react-icons/fi'\nimport { IconBaseProps } from 'react-icons'\nimport { Link } from 'react-router-dom'\nimport { useToast } from '../../hooks/toast'\n\nimport { Container, ButtonBox } from './styles'\n\ninterface IMaterial {\n  id: string\n  status: string\n  name: string\n  barcode: string\n  available: boolean\n}\n\ninterface IProps {\n  material: IMaterial\n  icon?: React.ComponentType<IconBaseProps>\n  handleDelete: (id: string) => void\n  handleEdit: (material: IMaterial) => void\n}\n\nconst ListItemMaterial: React.FC<IProps> = ({\n  icon: Icon,\n  material,\n  handleDelete,\n  handleEdit\n}: IProps) => {\n  const [isAvailable, setIsAvailable] = useState(material.available)\n  const { addToast } = useToast()\n\n  async function toggleAvailable(): Promise<void> {\n    // try {\n    //  const { id, name, hospital_register } = material\n    //  await api.put(`/patients/${id}`, {\n    //    name,\n    //    hospital_register,\n    //    available: !isAvailable\n    //  })\n    //\n    //  setIsAvailable(!isAvailable)\n    // } catch (err) {\n    //  addToast({\n    //    type: 'error',\n    //    title: 'Erro no cadastro',\n    //    description: 'Ocorreu um erro ao desabilitar o paciente'\n    //  })\n    // }\n  }\n\n  function setEditingPatient(): void {\n    handleEdit(material)\n  }\n  return (\n    <Container available={isAvailable}>\n      {Icon && <Icon />}\n      <p>{material.status.toUpperCase()}</p>\n      <p>{material.barcode}</p>\n      <p>{material.name}</p>\n      <ButtonBox>\n        <Link to={`/material/${material.id}`}>\n          <FiList />\n        </Link>\n        <button onClick={() => setEditingPatient()} className=\"EditButton\">\n          <FiEdit />\n        </button>\n        <div className=\"availability-container\">\n          <p>{isAvailable ? 'Disponível' : 'Indisponível'}</p>\n\n          <label htmlFor={`available-switch-${material.id}`} className=\"switch\">\n            <input\n              id={`available-switch-${material.id}`}\n              type=\"checkbox\"\n              checked={isAvailable}\n              onChange={toggleAvailable}\n              data-testid={`change-status-suplier-${material.id}`}\n            />\n            <span className=\"slider\" />\n          </label>\n        </div>\n      </ButtonBox>\n    </Container>\n  )\n}\n\nexport default ListItemMaterial\n","/Users/jessica/Desktop/TCC/consig/frontend/src/pages/Batch/styles.ts",["682"],"/Users/jessica/Desktop/TCC/consig/frontend/src/pages/Batch/index.tsx",[],"/Users/jessica/Desktop/TCC/consig/frontend/src/routes/index.tsx",["683","684","685"],"import React from 'react'\nimport { Switch, BrowserRouter } from 'react-router-dom'\nimport GlobalStyle from '../styles/global'\n\nimport { ThemeProvider, DefaultTheme } from 'styled-components'\nimport usePersistedState from '../utils/usePersistedState'\nimport theme from '../styles/theme'\n\nimport Route from './Route'\n\nimport SignIn from '../pages/SignIn'\nimport SignUp from '../pages/SignUp'\nimport Dashboard from '../pages/Dashboard'\nimport Success from '../pages/Success'\nimport SuccessEditSuplier from '../pages/SuccessEditSuplier'\nimport Users from '../pages/Users'\nimport User from '../pages/User'\nimport ForgotPassword from '../pages/ForgotPassword'\nimport ResetPassword from '../pages/ResetPassword'\n\nimport CreateSuplier from '../pages/CreateSuplier'\nimport Suplier from '../pages/Suplier'\nimport Supliers from '../pages/Supliers'\n\nimport Patients from '../pages/Patients'\nimport CreatePatient from '../pages/CreatePatient'\nimport Patient from '../pages/Patient'\n\nimport Batchs from '../pages/Batchs'\nimport CreateBatch from '../pages/CreateBatch'\nimport Batch from '../pages/Batch'\n\nimport Surgeries from '../pages/Surgeries'\nimport CreateSurgery from '../pages/CreateSurgery'\nimport Surgery from '../pages/Surgery'\n\nconst Routes: React.FC = () => {\n  return (\n    <Switch>\n      <ThemeProvider theme={theme}>\n        <Route path=\"/\" exact component={SignIn} />\n        <Route path=\"/forgot\" exact component={ForgotPassword} />\n        <Route path=\"/reset-password\" exact component={ResetPassword} />\n\n        <Route path=\"/dashboard\" component={Dashboard} isPrivate />\n        <Route path=\"/signup\" component={SignUp} isPrivate />\n        <Route path=\"/success\" component={Success} isPrivate />\n        <Route\n          path=\"/success-edit-supleir\"\n          component={SuccessEditSuplier}\n          isPrivate\n        />\n        <Route path=\"/users\" component={Users} isPrivate />\n        <Route path=\"/user/:id\" component={User} isPrivate />\n\n        <Route path=\"/create-supliers\" component={CreateSuplier} isPrivate />\n        <Route path=\"/suplier/:id\" component={Suplier} isPrivate />\n        <Route path=\"/supliers\" component={Supliers} isPrivate />\n\n        <Route path=\"/create-patients\" component={CreatePatient} isPrivate />\n        <Route path=\"/patient/:id\" component={Patient} isPrivate />\n        <Route path=\"/patients\" component={Patients} isPrivate />\n\n        <Route path=\"/create-batch\" component={CreateBatch} isPrivate />\n        <Route path=\"/batch/:id\" component={Batch} isPrivate />\n        <Route path=\"/batchs\" component={Batchs} isPrivate />\n\n        <Route path=\"/create-surgery\" component={CreateSurgery} isPrivate />\n        <Route path=\"/surgeries\" component={Surgeries} isPrivate />\n        <Route path=\"/surgery/:id\" component={Surgery} isPrivate />\n        <GlobalStyle />\n      </ThemeProvider>\n    </Switch>\n  )\n}\n\nexport default Routes\n","/Users/jessica/Desktop/TCC/consig/frontend/src/hooks/auth.tsx",[],"/Users/jessica/Desktop/TCC/consig/frontend/src/pages/ResetPassword/index.tsx",["686"],"/* eslint-disable camelcase */\nimport React, { useRef, useCallback, useState } from 'react'\nimport { FiLock } from 'react-icons/fi'\nimport { Form } from '@unform/web'\nimport { FormHandles } from '@unform/core'\nimport { useHistory, useLocation } from 'react-router-dom'\nimport queryString from 'query-string'\nimport * as Yup from 'yup'\n\nimport { useToast } from '../../hooks/toast'\nimport ShowPasswordInput from '../../components/ShowInputPassword'\nimport Button from '../../components/Button'\nimport getValidationErrors from '../../utils/getValidationErrors'\n\nimport { Container, Wrapper } from './styles'\nimport ResetPasswordImage from '../../assets/images/reset-password.png'\nimport GoBackArrow from '../../assets/images/goback-arrow.svg'\n\nimport api from '../../services/api'\n\ninterface ResetPasswordFormData {\n  password: string\n  password_confirmation: string\n}\n\nconst ResetPassword: React.FC = () => {\n  const [loading, setLoading] = useState<boolean>(false)\n  const formRef = useRef<FormHandles>(null)\n  const history = useHistory()\n  const location = useLocation()\n\n  const { addToast } = useToast()\n\n  const handleSubmit = useCallback(\n    async (data: ResetPasswordFormData) => {\n      try {\n        formRef.current?.setErrors({})\n        const schema = Yup.object().shape({\n          password: Yup.string().required('Senha obrigatória'),\n          password_confirmation: Yup.string().oneOf(\n            [Yup.ref('password')],\n            'Senhas diferentes'\n          )\n        })\n\n        await schema.validate(data, {\n          abortEarly: false\n        })\n\n        const { token } = queryString.parse(location.search)\n\n        if (!token) {\n          throw new Error()\n        }\n\n        api.post('/password/reset', {\n          password: data.password,\n          password_confirmation: data.password_confirmation,\n          token\n        })\n\n        addToast({\n          type: 'success',\n          title: 'Senha Alterada',\n          description: 'A senha foi alterada com sucesso'\n        })\n\n        history.push('/')\n      } catch (err) {\n        if (err instanceof Yup.ValidationError) {\n          const errors = getValidationErrors(err)\n\n          formRef.current?.setErrors(errors)\n\n          return\n        }\n\n        addToast({\n          type: 'error',\n          title: 'Erro ao resetar senha',\n          description: 'Ocorreu um erro ao resetar sua senha, tente novamente'\n        })\n      }\n    },\n    [addToast, history, location.search]\n  )\n\n  return (\n    <div>\n      <main>\n        <Container>\n          <Wrapper>\n            <a href=\"#\">\n              <img src={GoBackArrow} alt=\"Go Back\" />\n            </a>\n            <h1>Resetar Senha</h1>\n            <Form ref={formRef} onSubmit={handleSubmit}>\n              <ShowPasswordInput\n                name=\"password\"\n                type=\"password\"\n                placeholder=\"Nova senha\"\n                icon={FiLock}\n              />\n\n              <ShowPasswordInput\n                name=\"password_confirmation\"\n                type=\"password\"\n                placeholder=\"Confirmação de senha\"\n                icon={FiLock}\n              />\n\n              <Button loading={loading} type=\"submit\">\n                Alterar Senha\n              </Button>\n            </Form>\n          </Wrapper>\n          <img src={ResetPasswordImage} alt=\"Reset Password Image\" />\n        </Container>\n      </main>\n    </div>\n  )\n}\n\nexport default ResetPassword\n","/Users/jessica/Desktop/TCC/consig/frontend/src/pages/Patient/index.tsx",["687"],"/* eslint-disable @typescript-eslint/no-empty-function */\n/* eslint-disable multiline-ternary */\n/* eslint-disable camelcase */\nimport React, { useState, useEffect } from 'react'\nimport { FiArrowLeft, FiTruck, FiList } from 'react-icons/fi'\nimport { RiUserHeartLine } from 'react-icons/ri'\nimport { useParams, useHistory } from 'react-router-dom'\nimport ReactLoading from 'react-loading'\nimport { GiScalpel } from 'react-icons/gi'\nimport { BiStore } from 'react-icons/bi'\nimport Lottie from 'react-lottie'\n\nimport Sidebar from '../../components/Sidebar'\nimport Header from '../../components/Header'\nimport TitleContent from '../../components/TitleContent'\nimport PatientImage from '../../assets/images/patient.svg'\nimport ListItemMaterial from '../../components/ListItemMaterial'\n\nimport colors from '../../styles/theme/colors'\nimport animationData from '../../assets/lottie-animations/material.json'\nimport api from '../../services/api'\n\nimport {\n  Container,\n  MainContent,\n  RightContent,\n  LeftContent,\n  Paragraph,\n  TitleParagraph,\n  RightContentInside,\n  LodingBackground,\n  Bar,\n  TableHeader,\n  ImageContainer,\n  Title\n} from './styles'\n\ninterface IMaterial {\n  id: string\n  name: string\n  barcode: string\n  status: string\n  available: boolean\n}\ninterface IPatient {\n  id: string\n  name: string\n  hospital_register: string\n  materials: IMaterial[]\n}\n\ninterface UserParams {\n  id: string\n}\n\nconst Patient: React.FC = () => {\n  const params = useParams<UserParams>()\n  const [patient, setPatient] = useState<IPatient>()\n  const { goBack } = useHistory()\n\n  const defaultOptions = {\n    loop: true,\n    autoplay: true,\n    animationData: animationData,\n    rendererSettings: {\n      preserveAspectRatio: 'xMidYMid slice'\n    }\n  }\n\n  useEffect(() => {\n    api.get(`patients/${params.id}`).then(response => {\n      setPatient(response.data)\n    })\n  }, [params.id])\n\n  if (!patient) {\n    return (\n      <LodingBackground>\n        <ReactLoading\n          type={'bubbles'}\n          color={colors.pink}\n          height={'20%'}\n          width={'20%'}\n        />\n      </LodingBackground>\n    )\n  }\n\n  return (\n    <Container>\n      <Sidebar />\n      <Header />\n      <MainContent>\n        <LeftContent />\n        <RightContent>\n          <RightContentInside>\n            <button type=\"button\" onClick={goBack}>\n              <FiArrowLeft size={24} />\n            </button>\n            <TitleContent icon={RiUserHeartLine} title=\"Detalhes do cadastro\" />\n            <TitleParagraph>\n              <strong>{patient.name}</strong>\n            </TitleParagraph>\n            <Paragraph>\n              <FiList />\n              <strong> Registro Hospitalar: </strong>\n              {patient.hospital_register}\n            </Paragraph>\n            <Bar />\n            {patient.materials.length === 0 ? (\n              <ImageContainer>\n                <p>Não tem nenhum material solicitado para esse paciente</p>\n                <Lottie\n                  options={defaultOptions}\n                  height={200}\n                  width={200}\n                  isPaused={false}\n                />\n              </ImageContainer>\n            ) : (\n              <>\n                <Title>Materiais solicitados para o paciente</Title>\n                <TableHeader>\n                  <p></p>\n                  <p>Status</p>\n                  <p>Código de Barras</p>\n                  <p>Material</p>\n                  <p></p>\n                </TableHeader>\n                {patient.materials &&\n                  patient.materials.map(material => {\n                    if (material.status.toUpperCase() === 'ALMOXARIFADO') {\n                      return (\n                        <ListItemMaterial\n                          key={material.id}\n                          icon={BiStore}\n                          material={material}\n                          handleEdit={() => {}}\n                          handleDelete={() => {}}\n                        />\n                      )\n                    } else if (material.status.toUpperCase() === 'FORNECEDOR') {\n                      return (\n                        <ListItemMaterial\n                          key={material.id}\n                          icon={FiTruck}\n                          material={material}\n                          handleEdit={() => {}}\n                          handleDelete={() => {}}\n                        />\n                      )\n                    }\n                    return (\n                      <ListItemMaterial\n                        key={material.id}\n                        icon={GiScalpel}\n                        material={material}\n                        handleEdit={() => {}}\n                        handleDelete={() => {}}\n                      />\n                    )\n                  })}\n              </>\n            )}\n          </RightContentInside>\n        </RightContent>\n      </MainContent>\n    </Container>\n  )\n}\n\nexport default Patient\n","/Users/jessica/Desktop/TCC/consig/frontend/src/pages/Surgery/index.tsx",["688","689"],"/* eslint-disable camelcase */\nimport React, { useState, useEffect } from 'react'\nimport {\n  FiLoader,\n  FiPlus,\n  FiPlayCircle,\n  FiArrowLeft,\n  FiCheckCircle\n} from 'react-icons/fi'\nimport { AiOutlineCloseCircle } from 'react-icons/ai'\nimport { GiScalpel } from 'react-icons/gi'\nimport { format, parseISO } from 'date-fns'\n\nimport ReactLoading from 'react-loading'\nimport { useParams, useHistory } from 'react-router-dom'\nimport Sidebar from '../../components/Sidebar'\nimport Header from '../../components/Header'\nimport TitleContent from '../../components/TitleContent'\nimport SurgeryImage from '../../assets/images/surgery.svg'\nimport colors from '../../styles/theme/colors'\n\nimport api from '../../services/api'\n\nimport {\n  Container,\n  MainContent,\n  RightContent,\n  LeftContent,\n  Paragraph,\n  TitleParagraph,\n  RightContentInside,\n  LodingBackground,\n  Card\n} from './styles'\nimport { StringDecoder } from 'string_decoder'\n\ninterface ISurgery {\n  id: string\n  doctor: string\n  surgery_date: string\n  specialty: string\n  status: string\n}\n\ninterface SurgeryParams {\n  id: string\n}\n\nconst Surgery: React.FC = () => {\n  const params = useParams<SurgeryParams>()\n  const [surgery, setSurgery] = useState<ISurgery>()\n  const { goBack } = useHistory()\n\n  useEffect(() => {\n    api.get(`surgeries/${params.id}`).then(response => {\n      setSurgery(response.data)\n    })\n  }, [params.id])\n  if (!surgery) {\n    return (\n      <LodingBackground>\n        <ReactLoading\n          type={'bubbles'}\n          color={colors.pink}\n          height={'20%'}\n          width={'20%'}\n        />\n      </LodingBackground>\n    )\n  }\n\n  return (\n    <Container>\n      <Sidebar />\n      <Header />\n      <MainContent>\n        <LeftContent />\n        <RightContent>\n          <RightContentInside>\n            <button type=\"button\" onClick={goBack}>\n              <FiArrowLeft size={24} />\n            </button>\n            <TitleContent\n              icon={GiScalpel}\n              title=\"Detalhe da Cirurgia\"\n              subtitle={`Cirurgia de ${surgery.specialty}`}\n            />\n            <TitleParagraph>\n              <strong>Especialidade: {surgery.specialty}</strong>\n            </TitleParagraph>\n            <Paragraph>\n              Data da Cirurgia:{' '}\n              {format(parseISO(surgery.surgery_date), 'dd/MM/yyyy')}\n            </Paragraph>\n            <Paragraph>Médico Responsável: Dr°: {surgery.doctor}</Paragraph>\n\n            {surgery.status.toUpperCase() === 'EM ANDAMENTO' && (\n              <Card>\n                <div className=\"isGoingClass\">\n                  <FiLoader />\n                  <p>\n                    <strong>Status</strong>\n                  </p>\n                  <p>{surgery.status.toUpperCase()}</p>\n                </div>\n              </Card>\n            )}\n\n            {surgery.status.toUpperCase() === 'CANCELADA' && (\n              <Card>\n                <div className=\"canceledClass\">\n                  <AiOutlineCloseCircle />\n                  <p>\n                    <strong>Status</strong>\n                  </p>\n                  <p>{surgery.status.toUpperCase()}</p>\n                </div>\n              </Card>\n            )}\n\n            {surgery.status.toUpperCase() === 'PREVISTA' && (\n              <Card>\n                <div className=\"previewClass\">\n                  <FiPlayCircle />\n                  <p>\n                    <strong>Status</strong>\n                  </p>\n                  <p>{surgery.status.toUpperCase()}</p>\n                </div>\n              </Card>\n            )}\n\n            {surgery.status.toUpperCase() === 'FINALIZADA' && (\n              <Card>\n                <div className=\"completedClass\">\n                  <FiCheckCircle />\n                  <p>\n                    <strong>Status</strong>\n                  </p>\n                  <p>{surgery.status.toUpperCase()}</p>\n                </div>\n              </Card>\n            )}\n          </RightContentInside>\n          <img src={SurgeryImage} alt=\"Suplier Image\" />\n        </RightContent>\n      </MainContent>\n    </Container>\n  )\n}\n\nexport default Surgery\n","/Users/jessica/Desktop/TCC/consig/frontend/src/styles/theme/colors.ts",[],"/Users/jessica/Desktop/TCC/consig/frontend/src/pages/Success/styles.ts",[],"/Users/jessica/Desktop/TCC/consig/frontend/src/pages/CreateBatch/styles.ts",[],"/Users/jessica/Desktop/TCC/consig/frontend/src/pages/CreatePatient/styles.ts",["690"],"/Users/jessica/Desktop/TCC/consig/frontend/src/components/ToastContainer/styles.ts",[],"/Users/jessica/Desktop/TCC/consig/frontend/src/components/Button/index.tsx",[],"/Users/jessica/Desktop/TCC/consig/frontend/src/components/ListItem/index.tsx",["691"],"/* eslint-disable @typescript-eslint/ban-types */\nimport React, { useCallback } from 'react'\nimport { FiList, FiEdit, FiTrash } from 'react-icons/fi'\nimport { IconBaseProps } from 'react-icons'\nimport { Link } from 'react-router-dom'\n\nimport { Container, ButtonBox } from './styles'\n\ninterface IUser {\n  id: string\n  name: string\n  email: string\n  occupation: string\n  functional: string\n}\n\ninterface IProps {\n  user: IUser\n  icon?: React.ComponentType<IconBaseProps>\n  handleDelete: (id: string) => {}\n  handleEdit: (user: IUser) => void\n}\n\nconst ListItem: React.FC<IProps> = ({\n  icon: Icon,\n  user,\n  handleDelete,\n  handleEdit\n}: IProps) => {\n  function setEditingUser(): void {\n    handleEdit(user)\n  }\n\n  return (\n    <Container>\n      {Icon && <Icon />}\n      <p>{user.name}</p>\n      <p>{user.functional}</p>\n      <p>{user.occupation}</p>\n      <ButtonBox>\n        <Link to={`/user/${user.id}`}>\n          <FiList />\n        </Link>\n        <button onClick={() => setEditingUser()}>\n          <FiEdit />\n        </button>\n        <button onClick={() => handleDelete(user.id)}>\n          <FiTrash />\n        </button>\n      </ButtonBox>\n    </Container>\n  )\n}\n\nexport default ListItem\n","/Users/jessica/Desktop/TCC/consig/frontend/src/components/Card/index.tsx",[],[],"/Users/jessica/Desktop/TCC/consig/frontend/src/pages/Patients/styles.ts",["692"],"import styled from 'styled-components'\nimport { shade, lighten } from 'polished'\n\nexport const Container = styled.div`\n  width: 100vw;\n  height: 100vh;\n`\n\nexport const MainContent = styled.main`\n  width: 100vw;\n  min-height: 100vh;\n  display: grid;\n  grid-template-columns: 1fr 4fr;\n  grid-gap: 2rem;\n`\nexport const LeftContent = styled.div``\n\nexport const RightContent = styled.div`\n  width: 100%;\n`\n\nexport const ButtonContent = styled.div`\n  width: 100%;\n  flex-direction: row;\n  display: flex;\n  margin: 2rem 0;\n\n  > a {\n    color: ${({ theme }) => theme.colors.white};\n    font: 700 1rem Nunito, sans-serif;\n    margin-top: 2.5rem;\n    text-decoration: none;\n    transition: color 0.2s;\n    align-items: center;\n    justify-content: center;\n    transition: color 0.2s;\n    background: ${({ theme }) => theme.colors.pink};\n    padding: 0.5rem;\n    border-radius: 0.5rem;\n    cursor: pointer;\n    &:hover {\n      background: ${({ theme }) => shade(0.1, theme.colors.pink)};\n    }\n  }\n`\n","/Users/jessica/Desktop/TCC/consig/frontend/src/helpers/removeMask.ts",[],"/Users/jessica/Desktop/TCC/consig/frontend/src/helpers/includeMaskCNPJ.ts",[],"/Users/jessica/Desktop/TCC/consig/frontend/src/components/TitleContent/styles.ts",[],"/Users/jessica/Desktop/TCC/consig/frontend/src/components/InputSelectSimple/styles.ts",[],"/Users/jessica/Desktop/TCC/consig/frontend/src/components/ModalEditSurgery/index.tsx",["693","694"],"/Users/jessica/Desktop/TCC/consig/frontend/src/components/ListItemPatient/index.tsx",["695","696"],"/Users/jessica/Desktop/TCC/consig/frontend/src/components/ModalEditSuplier/index.tsx",["697","698"],"/* eslint-disable camelcase */\nimport React, { useRef, useCallback } from 'react'\nimport { FormHandles } from '@unform/core'\nimport { Form } from '@unform/web'\nimport Modal from '../Modal'\nimport Input from '../Input'\nimport Button from '../Button'\nimport { FiCheckSquare } from 'react-icons/fi'\n\nimport { Container, Block, InputBlock, Label } from './styles'\nimport InputMask from '../../components/InputMask'\n\nimport removeMask from '../../helpers/removeMask'\n\ninterface ISuplier {\n  // id: string\n  companyName: string\n  cnpj: string\n  address: string\n  phone: string\n  avaible: boolean\n}\n\ninterface IModalProps {\n  isOpen: boolean\n  setIsOpen: () => void\n  handleUpdateSuplier: (suplier: Omit<ISuplier, 'id'>) => void\n  editingSuplier: ISuplier\n}\n\ninterface IEditSuplierData {\n  companyName: string\n  cnpj: string\n  address: string\n  phone: string\n  avaible: boolean\n}\n\nconst ModalEditSuplier: React.FC<IModalProps> = ({\n  isOpen,\n  setIsOpen,\n  editingSuplier,\n  handleUpdateSuplier\n}) => {\n  const formRef = useRef<FormHandles>(null)\n\n  const handleSubmit = useCallback(\n    async ({\n      companyName,\n      cnpj,\n      address,\n      phone,\n      avaible\n    }: IEditSuplierData) => {\n      handleUpdateSuplier({\n        companyName,\n        cnpj: removeMask(cnpj),\n        address,\n        phone: removeMask(phone),\n        avaible\n      })\n\n      setIsOpen()\n    },\n    [handleUpdateSuplier, setIsOpen]\n  )\n\n  return (\n    <Modal isOpen={isOpen} setIsOpen={setIsOpen}>\n      <Form ref={formRef} onSubmit={handleSubmit} initialData={editingSuplier}>\n        <h1>Editar Fornecedor</h1>\n        <Container>\n          <Label>Nome da empresa</Label>\n          <Input name=\"companyName\" type=\"text\" placeholder=\"Nome da Empresa\" />\n\n          <Label>CNPJ</Label>\n          <InputMask name=\"cnpj\" mask=\"99.999.999/9999-99\" placeholder=\"CNPJ\" />\n\n          <Label>Endereço</Label>\n          <Input name=\"address\" type=\"text\" />\n\n          <Label>Telefone</Label>\n          <InputMask name=\"phone\" mask=\"99999-9999\" placeholder=\"Telefone\" />\n\n          <Button type=\"submit\">\n            Alterar Dados\n            <FiCheckSquare size={24} />\n          </Button>\n        </Container>\n      </Form>\n    </Modal>\n  )\n}\n\nexport default ModalEditSuplier\n","/Users/jessica/Desktop/TCC/consig/frontend/src/components/ModalEditSurgery/styles.ts",[],"/Users/jessica/Desktop/TCC/consig/frontend/src/components/Menu/index.tsx",["699","700","701","702"],"import React, { useState } from 'react'\nimport MenuItem from '../MenuItem'\nimport { IconBaseProps } from 'react-icons'\nimport { Container } from './styles'\nimport { useLocation } from 'react-router-dom'\n\nimport { FiHome, FiUsers, FiTruck, FiPackage } from 'react-icons/fi'\nimport { RiUserHeartLine } from 'react-icons/ri'\nimport { GiScalpel } from 'react-icons/gi'\n\nconst Menu: React.FC = props => {\n  const location = useLocation()\n\n  const itemsData = [\n    {\n      name: 'Dashboard',\n      icon: FiHome,\n      path: '/dashboard',\n      key: 1\n    },\n    {\n      name: 'Usuários',\n      icon: FiUsers,\n      path: '/users',\n      key: 2\n    },\n    {\n      name: 'Fornecedores',\n      icon: FiTruck,\n      path: '/supliers',\n      key: 3\n    },\n    {\n      name: 'Pacientes',\n      icon: RiUserHeartLine,\n      path: '/patients',\n      key: 4\n    },\n    {\n      name: 'Lotes',\n      icon: FiPackage,\n      path: '/batchs',\n      key: 5\n    },\n    {\n      name: 'Cirurgias',\n      icon: GiScalpel,\n      path: '/surgeries',\n      key: 6\n    }\n  ]\n\n  return (\n    <Container>\n      {itemsData.map((item, idx: number) => {\n        return (\n          <MenuItem\n            key={idx}\n            name={item.name}\n            icon={item.icon}\n            link={item.path}\n          />\n        )\n      })}\n    </Container>\n  )\n}\n\nexport default Menu\n","/Users/jessica/Desktop/TCC/consig/frontend/src/components/ListItemPatient/styles.ts",["703"],"/Users/jessica/Desktop/TCC/consig/frontend/src/components/ListItemSuplier/styles.ts",["704"],"import styled, { css } from 'styled-components'\ninterface ISuplierProps {\n  avaible: boolean\n}\n\nexport const Container = styled.div<ISuplierProps>`\n  ${({ theme, avaible }) => css`\n    ${!avaible &&\n    css`\n      opacity: 0.5;\n    `}\n  `}\n\n  width: 95%;\n  height: 4rem;\n  background: ${({ theme }) => theme.colors.lightBlue};\n  justify-content: space-between;\n  border-radius: 0.5rem;\n  flex-direction: row;\n  display: grid;\n  grid-template-columns: 1fr 4fr 3fr 2fr 1fr;\n  align-items: center;\n  margin-bottom: 2rem;\n\n  svg {\n    color: ${({ theme }) => theme.colors.darkBlue};\n    margin-left: 1rem;\n  }\n\n  p {\n    color: ${({ theme }) => theme.colors.darkBlue};\n    font: 400 16px Roboto, sans-serif;\n  }\n`\n\nexport const ButtonBox = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  margin-right: 1rem;\n\n  button,\n  a {\n    background: transparent;\n    border: transparent;\n    cursor: pointer;\n    margin: auto;\n    svg {\n      color: ${({ theme }) => theme.colors.darkBlue};\n    }\n  }\n\n  div.availability-container {\n    p {\n      display: none;\n    }\n\n    .switch {\n      position: relative;\n      display: inline-block;\n      width: 56px;\n      height: 16px;\n      margin-left: 12px;\n      & input {\n        opacity: 0;\n        width: 0;\n        height: 0;\n      }\n      .slider {\n        position: absolute;\n        cursor: pointer;\n        top: 0;\n        left: 0;\n        right: 0;\n        bottom: 0;\n        background-color: ${({ theme }) => theme.colors.red};\n        -webkit-transition: 0.4s;\n        transition: 0.4s;\n        border-radius: 16px;\n        &:before {\n          position: absolute;\n          content: '';\n          height: 11px;\n          width: 20px;\n          left: 1px;\n          bottom: 3px;\n          background-color: white;\n          -webkit-transition: 0.4s;\n          transition: 0.4s;\n          border-radius: 10px;\n        }\n      }\n\n      input:checked + .slider {\n        background-color: ${({ theme }) => theme.colors.darkBlue};\n      }\n      input:focus + .slider {\n        box-shadow: 0 0 1px #2196f3;\n      }\n      input:checked + .slider:before {\n        -webkit-transform: translateX(32px);\n        -ms-transform: translateX(32px);\n        transform: translateX(32px);\n      }\n    }\n  }\n`\n","/Users/jessica/Desktop/TCC/consig/frontend/src/components/Tooltip/styles.ts",[],"/Users/jessica/Desktop/TCC/consig/frontend/src/pages/User/styles.ts",["705"],"import styled from 'styled-components'\nimport { shade, lighten } from 'polished'\n\nexport const Container = styled.div`\n  width: 100vw;\n  height: 100vh;\n`\n\nexport const MainContent = styled.main`\n  width: 100vw;\n  min-height: 100vh;\n  display: grid;\n  grid-template-columns: 1fr 4fr;\n  grid-gap: 2rem;\n`\nexport const LeftContent = styled.div``\n\nexport const RightContent = styled.div`\n  width: 100%;\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  grid-gap: 2rem;\n\n  img {\n    width: 70%;\n    align-items: center;\n    margin-top: 7rem;\n  }\n`\n\nexport const RightContentInside = styled.div`\n  button {\n    background: transparent;\n    border: none;\n    margin-top: 2rem;\n\n    svg {\n      color: ${({ theme }) => theme.colors.darkBlue};\n\n      &:hover {\n        color: ${({ theme }) => lighten(0.5, theme.colors.darkBlue)};\n      }\n    }\n  }\n`\n\nexport const Paragraph = styled.p`\n  color: ${({ theme }) => theme.colors.text};\n  font: 400 1rem Nunito, sans-serif;\n  margin-bottom: 2rem;\n\n  svg {\n    margin-right: 1rem;\n    color: ${({ theme }) => theme.colors.darkBlue};\n  }\n`\n\nexport const TitleParagraph = styled.p`\n  color: ${({ theme }) => theme.colors.text};\n  font: 400 1rem Nunito, sans-serif;\n  font-size: 2rem;\n  margin-bottom: 2rem;\n`\n","/Users/jessica/Desktop/TCC/consig/frontend/src/styles/theme/index.ts",[],"/Users/jessica/Desktop/TCC/consig/frontend/src/pages/Dashboard/index.tsx",["706"],"/* eslint-disable array-callback-return */\nimport React, { useState, useEffect } from 'react'\nimport { useAuth } from '../../hooks/auth'\nimport Sidebar from '../../components/Sidebar'\nimport Header from '../../components/Header'\nimport Card from '../../components/Card'\n\nimport api from '../../services/api'\n\nimport MaterialImage from '../../assets/images/material.svg'\nimport AlmoxarifadoImage from '../../assets/images/almoxarifado.svg'\nimport FornecedorImage from '../../assets/images/fornecedor.svg'\n\nimport {\n  Container,\n  Title,\n  SubTitle,\n  MainContent,\n  RightContent,\n  LeftContent,\n  CardRow\n} from './styles'\n\ninterface IMaterial {\n  id: string\n  name: string\n  barcode: string\n  status: string\n  available: boolean\n}\n\nconst Dashboard: React.FC = () => {\n  const { user } = useAuth()\n  const [totalSupliers, setTotalSupliers] = useState(0)\n\n  useEffect(() => {\n    api.get('supliers').then(response => {\n      const total = response.data.length\n\n      setTotalSupliers(total)\n    })\n  }, [])\n\n  return (\n    <Container>\n      <Sidebar />\n      <Header />\n      <MainContent>\n        <LeftContent />\n        <RightContent>\n          <Title>Bem vindo {user.name}</Title>\n          <SubTitle>Veja o resumo das principais informações.</SubTitle>\n          <CardRow>\n            <Card\n              firstLine=\"Você tem\"\n              information={30}\n              secondLine=\"materiais em cirurgia\"\n              image={MaterialImage}\n            />\n            <Card\n              firstLine=\"Você tem\"\n              information={30}\n              secondLine=\"materiais em almoxarifado\"\n              image={AlmoxarifadoImage}\n            />\n            <Card\n              firstLine=\"O almoxarifado tem\"\n              information={totalSupliers}\n              secondLine=\"fornecedores cadastrados\"\n              image={FornecedorImage}\n            />\n          </CardRow>\n        </RightContent>\n      </MainContent>\n    </Container>\n  )\n}\n\nexport default Dashboard\n","/Users/jessica/Desktop/TCC/consig/frontend/src/pages/Supliers/index.tsx",["707","708"],"/* eslint-disable @typescript-eslint/no-use-before-define */\n/* eslint-disable camelcase */\n/* eslint-disable no-unused-expressions */\n/* eslint-disable @typescript-eslint/no-empty-function */\nimport React, { useState, useEffect } from 'react'\nimport { FiTruck, FiPlus } from 'react-icons/fi'\nimport { Link, useHistory } from 'react-router-dom'\nimport 'react-confirm-alert/src/react-confirm-alert.css'\nimport { useToast } from '../../hooks/toast'\nimport 'react-toastify/dist/ReactToastify.css'\nimport Sidebar from '../../components/Sidebar'\nimport Header from '../../components/Header'\nimport ListItemSuplier from '../../components/ListItemSuplier'\nimport ModalEditSuplier from '../../components/ModalEditSuplier'\nimport TitleContent from '../../components/TitleContent'\nimport removeMask from '../../helpers/removeMask'\n\nimport api from '../../services/api'\n\nimport {\n  Container,\n  MainContent,\n  RightContent,\n  LeftContent,\n  ButtonContent\n} from './styles'\n\ninterface ISuplier {\n  id: string\n  companyName: string\n  cnpj: string\n  address: string\n  phone: string\n  avaible: boolean\n}\n\nconst Supliers: React.FC = () => {\n  const [supliers, setSupliers] = useState<ISuplier[]>([])\n  const [editingSuplier, setEditingSuplier] = useState<ISuplier>({} as ISuplier)\n  const [editModalOpen, setEditModalOpen] = useState(false)\n  const { addToast } = useToast()\n  const history = useHistory()\n\n  async function handleUpdateSuplier(\n    suplier: Omit<ISuplier, 'id'>\n  ): Promise<void> {\n    try {\n      const { id } = editingSuplier\n      console.log('editingSuplier')\n      console.log(editingSuplier)\n      await api.put<ISuplier>(`/supliers/${id}`, {\n        ...suplier\n      })\n\n      history.push('/success-edit-supleir')\n    } catch (err) {\n      console.log(err)\n\n      addToast({\n        type: 'error',\n        title: 'Erro ao alterar o fornecedor',\n        description: 'Ocorreu um erro ao alterar o fornecedor.'\n      })\n    }\n  }\n\n  useEffect(() => {\n    api.get('supliers').then(response => {\n      setSupliers(response.data)\n    })\n  }, [])\n\n  async function handleDeleteSuplier(id: string): Promise<void> {\n    const result = window.confirm('Deseja deletar esse fornecedor?')\n\n    if (result) {\n      try {\n        await api.delete(`/supliers/${id}`)\n\n        const allSupliers = supliers.filter(suplier => suplier.id !== id)\n\n        setSupliers(allSupliers)\n\n        addToast({\n          type: 'success',\n          title: 'Fornecedor Deletado',\n          description: 'O fornecedor foi deletado com sucesso.'\n        })\n      } catch (error) {\n        console.log(error)\n        addToast({\n          type: 'error',\n          title: 'Erro ao alterar o fornecedor',\n          description: 'Ocorreu um erro ao alterar o fornecedor.'\n        })\n      }\n    }\n  }\n\n  function toggleEditModal(): void {\n    setEditModalOpen(!editModalOpen)\n  }\n\n  function handleEditSuplier(suplier: ISuplier): void {\n    toggleEditModal()\n    setEditingSuplier(suplier)\n    console.log(suplier)\n  }\n\n  return (\n    <>\n      <ModalEditSuplier\n        isOpen={editModalOpen}\n        setIsOpen={toggleEditModal}\n        editingSuplier={editingSuplier}\n        handleUpdateSuplier={handleUpdateSuplier}\n      />\n\n      <Container>\n        <Sidebar />\n        <Header />\n        <MainContent>\n          <LeftContent />\n          <RightContent>\n            <TitleContent\n              icon={FiTruck}\n              title=\"Fornecedores Cadastrados\"\n              subtitle=\"Veja todos os fornecedores cadastrados no sistema.\"\n            />\n            <ButtonContent>\n              <Link to=\"/create-supliers\">\n                <FiPlus /> Cadastrar Fornecedor\n              </Link>\n            </ButtonContent>\n            {supliers &&\n              supliers.map(suplier => {\n                return (\n                  <ListItemSuplier\n                    key={suplier.id}\n                    icon={FiTruck}\n                    suplier={suplier}\n                    handleEdit={handleEditSuplier}\n                  />\n                )\n              })}\n          </RightContent>\n        </MainContent>\n      </Container>\n    </>\n  )\n}\n\nexport default Supliers\n","/Users/jessica/Desktop/TCC/consig/frontend/src/pages/CreateBatch/index.tsx",["709","710","711"],"/* eslint-disable no-unused-expressions */\n/* eslint-disable @typescript-eslint/no-empty-function */\n/* eslint-disable camelcase */\nimport React, { useCallback, useRef, useState, useEffect } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { Form } from '@unform/web'\nimport { FormHandles } from '@unform/core'\nimport * as Yup from 'yup'\nimport { FiArrowLeft, FiPackage } from 'react-icons/fi'\n\nimport getValidationErrors from '../../utils/getValidationErrors'\nimport { useToast } from '../../hooks/toast'\n\nimport BatchsImage from '../../assets/images/add-batch.svg'\n\nimport Input from '../../components/Input'\nimport InputSelect from '../../components/InputSelect'\nimport Button from '../../components/Button'\nimport Sidebar from '../../components/Sidebar'\nimport Header from '../../components/Header'\n\nimport api from '../../services/api'\n\nimport {\n  Container,\n  Title,\n  MainContent,\n  RightContent,\n  LeftContent,\n  TitleContent,\n  RightContentInside,\n  Label\n} from './styles'\n\ninterface ISuplier {\n  id: string\n  companyName: string\n  cnpj: string\n  address: string\n  phone: string\n}\n\ninterface BatchFormData {\n  batch_number: number\n  delivery_date: string\n  description: string\n  suplier: string\n}\n\ninterface IListSelect {\n  value: string\n  label: string\n}\n\ninterface LoadListSelect {\n  (list: IListSelect[]): void\n}\n\nconst CreateBatch: React.FC = () => {\n  const [loading, setLoading] = useState(false)\n  const [supliersListOption, setSupliersListOption] = useState<IListSelect[]>(\n    []\n  )\n  const [suplierSelected, setSuplierSelected] = useState<string>('')\n\n  const formRef = useRef<FormHandles>(null)\n  const { addToast } = useToast()\n  const history = useHistory()\n  const { goBack } = useHistory()\n\n  const loadOptions = useCallback(\n    (inputValue: string, callback: LoadListSelect) => {\n      const data = supliersListOption.filter(list =>\n        list.label.includes(inputValue)\n      )\n\n      callback(data)\n    },\n    [supliersListOption]\n  )\n\n  const handleSuplierChange = useCallback(data => {\n    setSuplierSelected(data?.value)\n  }, [])\n\n  useEffect(() => {\n    async function loadSupliers() {\n      const response = await api.get<ISuplier[]>('/supliers')\n\n      const data = response.data.map(suplier => ({\n        label: suplier.companyName,\n        value: suplier.id\n      }))\n\n      setSupliersListOption(data)\n    }\n    loadSupliers()\n  }, [supliersListOption])\n\n  const handleCreateBatch = useCallback(\n    async (data: BatchFormData) => {\n      try {\n        formRef.current?.setErrors({})\n        const schema = Yup.object().shape({\n          batch_number: Yup.string().required('Numero do lote é obrigatório'),\n          delivery_date: Yup.string().required('Data obrigatória'),\n          description: Yup.string().required('Descrição obrigatória'),\n          suplier_id: Yup.string().required('Fornecedor obrigatória')\n        })\n\n        console.log('objeto create')\n        console.log(data)\n\n        await schema.validate(data, {\n          abortEarly: false\n        })\n\n        await api.post('/batchs', data)\n        addToast({\n          type: 'success',\n          title: 'Cadastro Realizado',\n          description: 'Cadastro realizado com sucesso'\n        })\n\n        history.push('/batchs')\n      } catch (err) {\n        const errors = getValidationErrors(err)\n\n        formRef.current?.setErrors(errors)\n\n        addToast({\n          type: 'error',\n          title: 'Erro no cadastro',\n          description: 'Ocorreu um erro ao fazer o cadastro, tente novamente'\n        })\n      }\n    },\n    [addToast, history]\n  )\n\n  return (\n    <div>\n      <main>\n        <Container>\n          <Sidebar />\n          <Header />\n          <MainContent>\n            <LeftContent />\n            <RightContent>\n              <RightContentInside>\n                <button type=\"button\" onClick={goBack}>\n                  <FiArrowLeft size={24} />\n                </button>\n                <TitleContent>\n                  <FiPackage />\n                  <Title>Faça o Cadastro do Lote</Title>\n                </TitleContent>\n                <Form ref={formRef} onSubmit={handleCreateBatch}>\n                  <Label>Numero do lote</Label>\n                  <Input\n                    name=\"batch_number\"\n                    type=\"number\"\n                    placeholder=\"Insira o número do lote\"\n                  />\n\n                  <Label>Data de entrega:</Label>\n                  <Input\n                    name=\"delivery_date\"\n                    type=\"date\"\n                    placeholder=\"Insira a data de entrega\"\n                  />\n\n                  <Label>Descrição</Label>\n                  <Input\n                    name=\"description\"\n                    type=\"text\"\n                    placeholder=\"Insira a descrição\"\n                  />\n\n                  <Label>Fornecedor</Label>\n                  <InputSelect\n                    name=\"suplier_id\"\n                    defaultOptions={supliersListOption}\n                    loadOptions={loadOptions}\n                  />\n\n                  <Button loading={loading} type=\"submit\">\n                    Cadastrar\n                  </Button>\n                </Form>\n              </RightContentInside>\n              <img src={BatchsImage} alt=\"User Image\" />\n            </RightContent>\n          </MainContent>\n        </Container>\n      </main>\n    </div>\n  )\n}\n\nexport default CreateBatch\n","/Users/jessica/Desktop/TCC/consig/frontend/src/pages/SignIn/styles.ts",[],"/Users/jessica/Desktop/TCC/consig/frontend/src/components/ToastContainer/index.tsx",[],"/Users/jessica/Desktop/TCC/consig/frontend/src/components/Input/index.tsx",[],"/Users/jessica/Desktop/TCC/consig/frontend/src/components/TitleContent/index.tsx",[],"/Users/jessica/Desktop/TCC/consig/frontend/src/components/InputSelectSimple/index.tsx",["712","713","714"],"import React, { useCallback, useState, useRef, useEffect } from 'react'\nimport { useField } from '@unform/core'\nimport { FiAlertCircle } from 'react-icons/fi'\nimport Select from 'react-select/async'\nimport { Container, Error } from './styles'\nimport { Props } from './types'\n\ninterface Option {\n  value: string\n  label: string\n}\n\nconst InputSelectSimple: React.FC<Props> = ({ name, ...rest }: Props) => {\n  const [isFocused, setIsFocused] = useState(false)\n  const [isFilled, setIsFilled] = useState(false)\n\n  const selectRef = useRef(null)\n  const { registerField, defaultValue, fieldName, error } = useField(name)\n\n  useEffect(() => {\n    registerField({\n      name: fieldName,\n      ref: selectRef.current,\n      getValue: (ref: any) => {\n        if (rest.cacheOptions) {\n          if (!ref.select.state.value) {\n            return []\n          }\n\n          return ref.select.state.value.map((option: Option) => option.value)\n        }\n        if (!ref.select.state.value) {\n          return ''\n        }\n\n        return ref.select.state.value.value\n      },\n      setValue: (ref: any, value: Option) => {\n        ref.select.select.selectOption(value)\n      },\n      clearValue: (ref: any) => {\n        ref.select.select.clearValue()\n      }\n    })\n  }, [fieldName, registerField, rest.cacheOptions])\n\n  const handleInputFocus = useCallback(() => {\n    setIsFocused(true)\n  }, [])\n\n  const handleInputBlur = useCallback(() => {\n    setIsFocused(false)\n\n    setIsFilled(!!selectRef?.current)\n  }, [])\n\n  const handleInputChange = useCallback(() => {\n    setIsFilled(!!selectRef?.current)\n  }, [])\n\n  return (\n    <Container\n      isFilled={isFilled}\n      isFocused={isFocused}\n      hasError={!!error}\n      aria-label={`${name}-container`}\n    >\n      <Select\n        ref={selectRef}\n        name={name}\n        defaultValue={defaultValue}\n        onFocus={handleInputFocus}\n        onBlur={handleInputBlur}\n        onChange={handleInputChange}\n        classNamePrefix=\"react-select\"\n        {...rest}\n      />\n      {error && (\n        <Error title={error}>\n          <FiAlertCircle color=\"#c53030\" size={20} />\n        </Error>\n      )}\n    </Container>\n  )\n}\n\nexport default InputSelectSimple\n","/Users/jessica/Desktop/TCC/consig/frontend/src/components/Button/styles.ts",[],"/Users/jessica/Desktop/TCC/consig/frontend/src/components/Input/styles.ts",[],"/Users/jessica/Desktop/TCC/consig/frontend/src/components/ModalEditBatch/styles.ts",[],"/Users/jessica/Desktop/TCC/consig/frontend/src/components/Modal/index.tsx",["715"],"import React, { useState, useEffect } from 'react'\nimport ReactModal from 'react-modal'\n\ninterface IModalProps {\n  children: any\n  isOpen: boolean\n  setIsOpen: () => void\n}\n\nconst Modal: React.FC<IModalProps> = ({ children, isOpen, setIsOpen }) => {\n  const [modalStatus, setModalStatus] = useState(isOpen)\n\n  useEffect(() => {\n    setModalStatus(isOpen)\n  }, [isOpen])\n\n  return (\n    <ReactModal\n      shouldCloseOnOverlayClick={!false}\n      onRequestClose={setIsOpen}\n      isOpen={modalStatus}\n      ariaHideApp={false}\n      style={{\n        content: {\n          top: '50%',\n          left: '50%',\n          right: 'auto',\n          bottom: 'auto',\n          marginRight: '-50%',\n          transform: 'translate(-50%, -50%)',\n          background: '#FFF',\n          color: '#465297',\n          borderRadius: '8px',\n          width: '85.6rem',\n          border: 'none'\n        },\n        overlay: {\n          backgroundColor: '#121214e6'\n        }\n      }}\n    >\n      {children}\n    </ReactModal>\n  )\n}\n\nexport default Modal\n","/Users/jessica/Desktop/TCC/consig/frontend/src/components/Card/styles.ts",[],"/Users/jessica/Desktop/TCC/consig/frontend/src/pages/User/index.tsx",[],"/Users/jessica/Desktop/TCC/consig/frontend/src/pages/Surgeries/index.tsx",[],"/Users/jessica/Desktop/TCC/consig/frontend/src/pages/Surgery/styles.ts",["716"],"import styled from 'styled-components'\nimport { shade, lighten } from 'polished'\n\nexport const Container = styled.div`\n  width: 100vw;\n  height: 100vh;\n`\n\nexport const MainContent = styled.main`\n  width: 100vw;\n  min-height: 100vh;\n  display: grid;\n  grid-template-columns: 1fr 4fr;\n  grid-gap: 2rem;\n`\nexport const LeftContent = styled.div``\n\nexport const RightContent = styled.div`\n  width: 100%;\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  grid-gap: 2rem;\n\n  img {\n    width: 70%;\n    align-items: center;\n    margin-top: 7rem;\n  }\n`\n\nexport const RightContentInside = styled.div`\n  button {\n    background: transparent;\n    border: none;\n    margin-top: 2rem;\n\n    svg {\n      color: ${({ theme }) => theme.colors.darkBlue};\n\n      &:hover {\n        color: ${({ theme }) => lighten(0.5, theme.colors.darkBlue)};\n      }\n    }\n  }\n`\n\nexport const Paragraph = styled.p`\n  color: ${({ theme }) => theme.colors.text};\n  font: 400 1rem Nunito, sans-serif;\n  margin-bottom: 2rem;\n\n  svg {\n    margin-right: 1rem;\n    color: ${({ theme }) => theme.colors.darkBlue};\n  }\n`\n\nexport const TitleParagraph = styled.p`\n  color: ${({ theme }) => theme.colors.text};\n  font: 400 1rem Nunito, sans-serif;\n  font-size: 2rem;\n  margin-bottom: 2rem;\n`\nexport const LodingBackground = styled.div`\n  width: 100vw;\n  height: 100vh;\n  background: ${({ theme }) => theme.colors.darkBlue};\n  margin: auto;\n  justify-content: center;\n`\nexport const SubTitle = styled.h3`\n  font: 400 1rem Nunito, sans-serif;\n  color: ${({ theme }) => theme.colors.text};\n  font-size: 1rem;\n  margin-top: 0.8rem;\n`\n\nexport const ParagraphContent = styled.div`\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  grid-gap: 2rem;\n  justify-content: space-between;\n`\n\nexport const ParagraphContentInside = styled.div`\n  width: 100%;\n`\n\nexport const Card = styled.div`\n  .previewClass {\n    background: ${({ theme }) => theme.colors.lightYellow};\n    border: 1px solid ${({ theme }) => theme.colors.yellow};\n\n    width: 50%;\n    height: 7rem;\n\n    justify-content: space-between;\n    border-radius: 0.5rem;\n    flex-direction: column;\n    display: flex;\n    align-items: center;\n    margin-bottom: 2rem;\n    padding: 1rem;\n\n    svg {\n      color: ${({ theme }) => theme.colors.yellow};\n    }\n\n    p {\n      color: ${({ theme }) => theme.colors.yellow};\n      font: 400 16px Roboto, sans-serif;\n    }\n  }\n\n  .isGoingClass {\n    background: ${({ theme }) => theme.colors.lightBlue};\n    border: 1px solid ${({ theme }) => theme.colors.darkBlue};\n\n    width: 50%;\n    height: 7rem;\n\n    justify-content: space-between;\n    border-radius: 0.5rem;\n    flex-direction: column;\n    display: flex;\n    align-items: center;\n    margin-bottom: 2rem;\n    padding: 1rem;\n\n    svg {\n      color: ${({ theme }) => theme.colors.darkBlue};\n    }\n\n    p {\n      color: ${({ theme }) => theme.colors.darkBlue};\n      font: 400 16px Roboto, sans-serif;\n    }\n  }\n\n  .canceledClass {\n    background: ${({ theme }) => theme.colors.lightRed};\n    border: 1px solid ${({ theme }) => theme.colors.red};\n\n    width: 50%;\n    height: 7rem;\n\n    justify-content: space-between;\n    border-radius: 0.5rem;\n    flex-direction: column;\n    display: flex;\n    align-items: center;\n    margin-bottom: 2rem;\n    padding: 1rem;\n\n    svg {\n      color: ${({ theme }) => theme.colors.red};\n    }\n\n    p {\n      color: ${({ theme }) => theme.colors.red};\n      font: 400 16px Roboto, sans-serif;\n    }\n  }\n\n  .completedClass {\n    background: ${({ theme }) => theme.colors.lightGreen};\n    border: 1px solid ${({ theme }) => theme.colors.greenMiddle};\n\n    width: 50%;\n    height: 7rem;\n\n    justify-content: space-between;\n    border-radius: 0.5rem;\n    flex-direction: column;\n    display: flex;\n    align-items: center;\n    margin-bottom: 2rem;\n    padding: 1rem;\n\n    svg {\n      color: ${({ theme }) => theme.colors.greenMiddle};\n    }\n\n    p {\n      color: ${({ theme }) => theme.colors.greenMiddle};\n      font: 400 16px Roboto, sans-serif;\n    }\n  }\n`\n","/Users/jessica/Desktop/TCC/consig/frontend/src/components/LIstItemBatch/index.tsx",[],"/Users/jessica/Desktop/TCC/consig/frontend/src/components/ListItem/styles.ts",[],"/Users/jessica/Desktop/TCC/consig/frontend/src/components/ModalEditPatient/index.tsx",["717","718"],"/* eslint-disable camelcase */\nimport React, { useRef, useCallback } from 'react'\nimport { FormHandles } from '@unform/core'\nimport { Form } from '@unform/web'\nimport Modal from '../Modal'\nimport Input from '../Input'\nimport Button from '../Button'\nimport { FiCheckSquare } from 'react-icons/fi'\n\nimport { Container, Block, InputBlock, Label } from './styles'\n\ninterface IPatient {\n  // id: string\n  name: string\n  hospital_register: string\n  available: boolean\n}\n\ninterface IModalProps {\n  isOpen: boolean\n  setIsOpen: () => void\n  handleUpdatePatient: (user: Omit<IPatient, 'id'>) => void\n  editingPatient: IPatient\n}\n\ninterface IEditPatientData {\n  name: string\n  hospital_register: string\n  available: boolean\n}\n\nconst ModalEditPatient: React.FC<IModalProps> = ({\n  isOpen,\n  setIsOpen,\n  editingPatient,\n  handleUpdatePatient\n}) => {\n  const formRef = useRef<FormHandles>(null)\n\n  const handleSubmit = useCallback(\n    async (data: IEditPatientData) => {\n      handleUpdatePatient(data)\n      setIsOpen()\n      console.log('hadle submit')\n      console.log(data)\n    },\n    [handleUpdatePatient, setIsOpen]\n  )\n\n  return (\n    <Modal isOpen={isOpen} setIsOpen={setIsOpen}>\n      <Form ref={formRef} onSubmit={handleSubmit} initialData={editingPatient}>\n        <h1>Editar Paciente</h1>\n        <Container>\n          <Label>Nome Completo</Label>\n          <Input name=\"name\" type=\"text\" />\n\n          <Label>Registro Hospitalar</Label>\n          <Input name=\"hospital_register\" type=\"text\" />\n\n          <Button type=\"submit\">\n            Cadastrar\n            <FiCheckSquare size={24} />\n          </Button>\n        </Container>\n      </Form>\n    </Modal>\n  )\n}\n\nexport default ModalEditPatient\n","/Users/jessica/Desktop/TCC/consig/frontend/src/components/Tooltip/index.tsx",[],"/Users/jessica/Desktop/TCC/consig/frontend/src/index.tsx",[],"/Users/jessica/Desktop/TCC/consig/frontend/src/pages/SignUp/index.tsx",["719"],"import React, { useCallback, useRef, useState } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { Form } from '@unform/web'\nimport { FormHandles } from '@unform/core'\nimport * as Yup from 'yup'\n\nimport { Container, Wrapper, Block, Label, InputBlock } from './styles'\nimport getValidationErrors from '../../utils/getValidationErrors'\nimport { useToast } from '../../hooks/toast'\n\nimport GoBackArrow from '../../assets/images/goback-arrow.svg'\nimport SignUpImage from '../../assets/images/signup.svg'\n\nimport Input from '../../components/Input'\nimport ShowPasswordInput from '../../components/ShowInputPassword'\nimport Button from '../../components/Button'\n\nimport api from '../../services/api'\n\ninterface SignUpFormData {\n  name: string\n  email: string\n  occupation: string\n  functional: string\n  password: string\n}\nconst SignUp: React.FC = () => {\n  const [loading, setLoading] = useState(false)\n  const formRef = useRef<FormHandles>(null)\n  const { addToast } = useToast()\n  const history = useHistory()\n\n  const handleSignUp = useCallback(\n    async (data: SignUpFormData) => {\n      try {\n        formRef.current?.setErrors({})\n        const schema = Yup.object().shape({\n          name: Yup.string().required('Nome Obrigatório'),\n          email: Yup.string()\n            .email('Digite um email válido')\n            .required('email obrigatório'),\n          occupation: Yup.string().required('Cargo Obrigatório'),\n          functional: Yup.string().required('Registro Funcional Obrigatório'),\n          password: Yup.string().required('Senha Obrigatória')\n        })\n\n        await schema.validate(data, {\n          abortEarly: false\n        })\n\n        await api.post('/users', data)\n\n        history.push('/success')\n      } catch (err) {\n        const errors = getValidationErrors(err)\n\n        formRef.current?.setErrors(errors)\n\n        addToast({\n          type: 'error',\n          title: 'Erro no cadastro',\n          description: 'Ocorreu um erro ao fazer o cadastro, tente novamnte'\n        })\n      }\n    },\n    [addToast, history]\n  )\n\n  return (\n    <div>\n      <main>\n        <Container>\n          <Wrapper>\n            <a href=\"/users\">\n              <img src={GoBackArrow} alt=\"Go Back\" />\n            </a>\n            <h1>Faça seu Cadastro</h1>\n            <h5>Preencha os dados abaixo para fazer o cadastro.</h5>\n            <Form ref={formRef} onSubmit={handleSignUp}>\n              <Label>Nome Completo</Label>\n              <Input name=\"name\" type=\"text\" />\n\n              <Label>Email</Label>\n              <Input name=\"email\" type=\"email\" />\n\n              <Label>Cargo</Label>\n              <Input name=\"occupation\" type=\"text\" />\n\n              <Block>\n                <InputBlock>\n                  <Label>Registro Funcional</Label>\n                  <Input name=\"functional\" type=\"text\" />\n                </InputBlock>\n                <InputBlock>\n                  <Label>Senha</Label>\n                  <ShowPasswordInput name=\"password\" type=\"password\" />\n                </InputBlock>\n              </Block>\n\n              <Button loading={loading} type=\"submit\">\n                Cadastrar\n              </Button>\n            </Form>\n          </Wrapper>\n          <img src={SignUpImage} alt=\"SignInUp Image\" />\n        </Container>\n      </main>\n    </div>\n  )\n}\n\nexport default SignUp\n","/Users/jessica/Desktop/TCC/consig/frontend/src/pages/CreatePatient/index.tsx",["720","721"],"/Users/jessica/Desktop/TCC/consig/frontend/src/components/ShowInputPassword/index.tsx",[],"/Users/jessica/Desktop/TCC/consig/frontend/src/components/ShowInputPassword/styles.ts",[],"/Users/jessica/Desktop/TCC/consig/frontend/src/components/LIstItemBatch/styles.ts",["722"],"import styled, { css } from 'styled-components'\n\ninterface IBatchProps {\n  available: boolean\n}\n\nexport const Container = styled.div<IBatchProps>`\n  ${({ theme, available }) => css`\n    ${!available &&\n    css`\n      opacity: 0.5;\n    `}\n  `}\n\n  width: 95%;\n  height: 9rem;\n  padding: 0.5rem;\n  background: linear-gradient(\n    to bottom,\n    ${({ theme }) => theme.colors.middlePink},\n    #fff\n  );\n  justify-content: space-between;\n  border-radius: 0.5rem;\n  flex-direction: column;\n  display: flex;\n  align-items: center;\n  margin-bottom: 2rem;\n  border: 1px solid ${({ theme }) => theme.colors.pink};\n\n  svg {\n    color: ${({ theme }) => theme.colors.pink};\n    height: 2rem;\n    width: 2rem;\n    background: ${({ theme }) => theme.colors.lightPink};\n    border-radius: 0.2rem;\n  }\n\n  p {\n    color: ${({ theme }) => theme.colors.pink};\n    font: 400 16px Roboto, sans-serif;\n  }\n`\n\nexport const ButtonBox = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  margin-right: 1rem;\n\n  button,\n  a {\n    background: transparent;\n    border: transparent;\n    cursor: pointer;\n\n    svg {\n      color: ${({ theme }) => theme.colors.pink};\n      margin-left: 1rem;\n      height: 1rem;\n      width: 1rem;\n    }\n  }\n\n  div.availability-container {\n    p {\n      display: none;\n    }\n\n    .switch {\n      position: relative;\n      display: inline-block;\n      width: 56px;\n      height: 16px;\n      margin-left: 12px;\n      & input {\n        opacity: 0;\n        width: 0;\n        height: 0;\n      }\n      .slider {\n        position: absolute;\n        cursor: pointer;\n        top: 0;\n        left: 0;\n        right: 0;\n        bottom: 0;\n        background-color: ${({ theme }) => theme.colors.red};\n        -webkit-transition: 0.4s;\n        transition: 0.4s;\n        border-radius: 16px;\n        &:before {\n          position: absolute;\n          content: '';\n          height: 11px;\n          width: 20px;\n          left: 1px;\n          bottom: 3px;\n          background-color: white;\n          -webkit-transition: 0.4s;\n          transition: 0.4s;\n          border-radius: 10px;\n        }\n      }\n\n      input:checked + .slider {\n        background-color: ${({ theme }) => theme.colors.pink};\n      }\n      input:focus + .slider {\n        box-shadow: 0 0 1px #2196f3;\n      }\n      input:checked + .slider:before {\n        -webkit-transform: translateX(32px);\n        -ms-transform: translateX(32px);\n        transform: translateX(32px);\n      }\n    }\n  }\n`\n","/Users/jessica/Desktop/TCC/consig/frontend/src/components/ModalEditPatient/styles.ts",[],"/Users/jessica/Desktop/TCC/consig/frontend/src/components/ModalEditSuplier/styles.ts",[],"/Users/jessica/Desktop/TCC/consig/frontend/src/pages/SignIn/index.tsx",["723"],"import React, { useRef, FormEvent, useState, useCallback } from 'react'\nimport { Form } from '@unform/web'\nimport { FormHandles } from '@unform/core'\nimport { useHistory, Link } from 'react-router-dom'\n\nimport { useAuth } from '../../hooks/auth'\nimport { useToast } from '../../hooks/toast'\nimport getValidationErrors from '../../utils/getValidationErrors'\nimport * as Yup from 'yup'\n\nimport { Container, Wrapper } from './styles'\nimport LoginImage from '../../assets/images/login-image.svg'\nimport Input from '../../components/Input'\nimport ShowPasswordInput from '../../components/ShowInputPassword'\nimport Button from '../../components/Button'\n\nimport { FiUser, FiLock } from 'react-icons/fi'\n\ninterface SignInFormData {\n  functional: string\n  password: string\n}\n\nconst SignIn: React.FC = () => {\n  const [loading, setLoading] = useState(false)\n  const formRef = useRef<FormHandles>(null)\n  const history = useHistory()\n\n  const { signIn } = useAuth()\n  const { addToast } = useToast()\n\n  const handleSubmit = useCallback(\n    async (data: SignInFormData) => {\n      try {\n        setLoading(true)\n\n        formRef.current?.setErrors({})\n\n        const schema = Yup.object().shape({\n          functional: Yup.string().required('Registro Funcional é obrigatório'),\n          password: Yup.string().required('Senha é obrigatória')\n        })\n\n        await schema.validate(data, { abortEarly: false })\n\n        await signIn({\n          functional: data.functional,\n          password: data.password\n        })\n\n        history.push('/dashboard')\n      } catch (err) {\n        if (err instanceof Yup.ValidationError) {\n          const errors = getValidationErrors(err)\n\n          formRef.current?.setErrors(errors)\n\n          return\n        }\n\n        addToast({\n          type: 'error',\n          title: 'Erro na autenticação!',\n          description: 'Ocorreu um erro ao fazer login, cheque as credenciais.'\n        })\n      } finally {\n        setLoading(false)\n      }\n    },\n    [signIn, addToast, history]\n  )\n\n  // const handleSubmit = useCallback(\n  //  async (data: SignInFormData) => {\n  //    await signIn({\n  //      functional: data.functional,\n  //      password: data.password\n  //    })\n  //  },\n  //  [signIn, history]\n  // )\n\n  return (\n    <div>\n      <main>\n        <Container>\n          <Wrapper>\n            <h1>Fazer Login</h1>\n            <Form ref={formRef} onSubmit={handleSubmit}>\n              <Input\n                name=\"functional\"\n                type=\"text\"\n                placeholder=\"Registro funcional\"\n                icon={FiUser}\n              />\n\n              <ShowPasswordInput\n                name=\"password\"\n                type=\"password\"\n                placeholder=\"senha\"\n                icon={FiLock}\n              />\n\n              <Button loading={loading} type=\"submit\">\n                Entrar\n              </Button>\n            </Form>\n            <Link to=\"/forgot\">Esqueci minha senha</Link>\n          </Wrapper>\n          <img src={LoginImage} alt=\"Login Image\" />\n          {console.log('clicou')}\n        </Container>\n      </main>\n    </div>\n  )\n}\n\nexport default SignIn\n","/Users/jessica/Desktop/TCC/consig/frontend/src/pages/Supliers/styles.ts",["724"],"import styled from 'styled-components'\nimport { shade, lighten } from 'polished'\n\nexport const Container = styled.div`\n  width: 100vw;\n  height: 100vh;\n`\n\nexport const SubTitle = styled.h3`\n  font: 400 1rem Nunito, sans-serif;\n  color: ${({ theme }) => theme.colors.text};\n  font-size: 1rem;\n  margin-top: 0.8rem;\n`\n\nexport const MainContent = styled.main`\n  width: 100vw;\n  min-height: 100vh;\n  display: grid;\n  grid-template-columns: 1fr 4fr;\n  grid-gap: 2rem;\n`\nexport const LeftContent = styled.div``\n\nexport const RightContent = styled.div`\n  width: 100%;\n`\n\nexport const ButtonContent = styled.div`\n  width: 100%;\n  flex-direction: row;\n  display: flex;\n  margin: 2rem 0;\n\n  > a {\n    color: ${({ theme }) => theme.colors.white};\n    font: 700 1rem Nunito, sans-serif;\n    margin-top: 2.5rem;\n    text-decoration: none;\n    transition: color 0.2s;\n    align-items: center;\n    justify-content: center;\n    transition: color 0.2s;\n    background: ${({ theme }) => theme.colors.pink};\n    padding: 0.5rem;\n    border-radius: 0.5rem;\n    cursor: pointer;\n    &:hover {\n      background: ${({ theme }) => shade(0.1, theme.colors.pink)};\n    }\n  }\n`\n","/Users/jessica/Desktop/TCC/consig/frontend/src/pages/Patients/index.tsx",["725","726","727"],"/* eslint-disable camelcase */\n/* eslint-disable no-unused-expressions */\n/* eslint-disable @typescript-eslint/no-empty-function */\nimport React, { useState, useEffect } from 'react'\nimport { FiUser, FiUsers, FiPlus } from 'react-icons/fi'\nimport { RiUserHeartLine } from 'react-icons/ri'\nimport { Link } from 'react-router-dom'\nimport 'react-confirm-alert/src/react-confirm-alert.css'\nimport { useToast } from '../../hooks/toast'\nimport 'react-toastify/dist/ReactToastify.css'\n\nimport Sidebar from '../../components/Sidebar'\nimport Header from '../../components/Header'\nimport ListItemPatient from '../../components/ListItemPatient'\nimport ModalEditPatient from '../../components/ModalEditPatient'\nimport TitleContent from '../../components/TitleContent'\n\nimport api from '../../services/api'\n\nimport {\n  Container,\n  MainContent,\n  RightContent,\n  LeftContent,\n  ButtonContent\n} from './styles'\n\ninterface IPatient {\n  id: string\n  name: string\n  hospital_register: string\n  available: boolean\n}\n\ninterface IPatientEdit {\n  name: string\n  hospital_register: string\n}\n\nconst Patients: React.FC = () => {\n  const [patients, setPatients] = useState<IPatient[]>([])\n  const [editingPatient, setEditingPatient] = useState<IPatient>({} as IPatient)\n  const [editModalOpen, setEditModalOpen] = useState(false)\n  const { addToast } = useToast()\n\n  async function handleUpdatePatient(\n    patient: Omit<IPatient, 'id'>\n  ): Promise<void> {\n    try {\n      const { id } = editingPatient\n\n      console.log('editingUser')\n      console.log(editingPatient)\n\n      const { data } = await api.put<IPatient>(`/patients/${id}`, {\n        ...patient\n      })\n\n      const updatedPatients = patients.map(patient =>\n        patient.id === id ? data : patient\n      )\n\n      setPatients(updatedPatients)\n\n      addToast({\n        type: 'success',\n        title: 'Usuário alterado',\n        description: 'O usuário foi alterado com sucesso.'\n      })\n    } catch (err) {\n      console.log(err)\n\n      addToast({\n        type: 'error',\n        title: 'Paciente não foi alterado',\n        description: 'Ocorreu um erro ao alterar o paciente.'\n      })\n    }\n  }\n\n  useEffect(() => {\n    api.get('patients').then(response => {\n      setPatients(response.data)\n    })\n  }, [])\n\n  async function handleDeletePatient(id: string): Promise<void> {\n    const result = window.confirm('Deseja deletar esse paciente?')\n\n    if (result) {\n      try {\n        await api.delete(`/patients/${id}`)\n\n        const allPatients = patients.filter(patient => patient.id !== id)\n\n        setPatients(allPatients)\n\n        addToast({\n          type: 'success',\n          title: 'Paciente Deletado',\n          description: 'O paciente foi deletado com sucesso.'\n        })\n      } catch (error) {\n        console.log(error)\n\n        addToast({\n          type: 'error',\n          title: 'Paciente não foi deletado',\n          description: 'Ocorreu um erro ao deletar o paciente.'\n        })\n      }\n    }\n  }\n\n  function toggleEditModal(): void {\n    setEditModalOpen(!editModalOpen)\n  }\n\n  function handleEditPatient(patient: IPatient): void {\n    toggleEditModal()\n    setEditingPatient(patient)\n  }\n\n  return (\n    <>\n      <ModalEditPatient\n        isOpen={editModalOpen}\n        setIsOpen={toggleEditModal}\n        editingPatient={editingPatient}\n        handleUpdatePatient={handleUpdatePatient}\n      />\n\n      <Container>\n        <Sidebar />\n        <Header />\n        <MainContent>\n          <LeftContent />\n          <RightContent>\n            <TitleContent\n              icon={FiUsers}\n              title=\"Pacientes Cadastrados\"\n              subtitle=\"Veja todos os pacientes cadastrados no sistema.\"\n            />\n            <ButtonContent>\n              <Link to=\"/create-patients\">\n                <FiPlus /> Cadastrar Paciente\n              </Link>\n            </ButtonContent>\n            {patients &&\n              patients.map(patient => {\n                return (\n                  <ListItemPatient\n                    key={patient.id}\n                    icon={RiUserHeartLine}\n                    patient={patient}\n                    handleEdit={handleEditPatient}\n                  />\n                )\n              })}\n          </RightContent>\n        </MainContent>\n      </Container>\n    </>\n  )\n}\n\nexport default Patients\n","/Users/jessica/Desktop/TCC/consig/frontend/src/pages/SuccessEditSuplier/styles.ts",[],"/Users/jessica/Desktop/TCC/consig/frontend/src/pages/Patient/styles.ts",["728"],"import styled from 'styled-components'\nimport { shade, lighten } from 'polished'\n\nexport const Container = styled.div`\n  width: 100vw;\n  height: 100vh;\n`\n\nexport const MainContent = styled.main`\n  width: 100vw;\n  min-height: 100vh;\n  display: grid;\n  grid-template-columns: 1fr 4fr;\n  grid-gap: 2rem;\n`\nexport const LeftContent = styled.div``\n\nexport const RightContent = styled.div`\n  width: 100%;\n  display: grid;\n  grid-template-columns: repeat(2, 1fr);\n  grid-gap: 2rem;\n\n  img {\n    width: 70%;\n    align-items: center;\n    margin-top: 7rem;\n  }\n`\n\nexport const RightContentInside = styled.div`\n  button {\n    background: transparent;\n    border: none;\n    margin-top: 2rem;\n\n    svg {\n      color: ${({ theme }) => theme.colors.darkBlue};\n\n      &:hover {\n        color: ${({ theme }) => lighten(0.5, theme.colors.darkBlue)};\n      }\n    }\n  }\n`\nexport const Paragraph = styled.p`\n  color: ${({ theme }) => theme.colors.text};\n  font: 400 1rem Nunito, sans-serif;\n  margin-bottom: 2rem;\n\n  svg {\n    margin-right: 1rem;\n    color: ${({ theme }) => theme.colors.darkBlue};\n  }\n`\n\nexport const TitleParagraph = styled.p`\n  color: ${({ theme }) => theme.colors.text};\n  font: 400 1rem Nunito, sans-serif;\n  font-size: 2rem;\n  margin-bottom: 2rem;\n`\n\nexport const LodingBackground = styled.div`\n  width: 100vw;\n  height: 100vh;\n  background: ${({ theme }) => theme.colors.darkBlue};\n\n  margin: auto;\n  justify-content: center;\n`\n\nexport const Title = styled.h1`\n  font: 400 1rem Nunito, sans-serif;\n  color: ${({ theme }) => theme.colors.darkBlue};\n  font-size: 1.5rem;\n  margin-right: 1rem;\n  margin-bottom: 1.5rem;\n`\n\nexport const Bar = styled.hr`\n  background-color: ${({ theme }) => theme.colors.darkBlue};\n  width: 74vw;\n  height: 0.3rem;\n  border-radius: 18rem;\n  margin-bottom: 1.5rem;\n`\n\nexport const ImageContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n\n  img {\n    opacity: 0.5;\n    width: 20%;\n  }\n\n  p {\n    font: 700 1.5rem Nunito, sans-serif;\n    color: ${({ theme }) => theme.colors.darkBlue};\n    margin-bottom: 2rem;\n  }\n`\n\nexport const TableHeader = styled.div`\n  width: 95%;\n  height: 4rem;\n  background: transparent;\n  color: ${({ theme }) => theme.colors.text};\n  justify-content: space-between;\n  border-radius: 0.5rem;\n  flex-direction: row;\n  display: flex;\n  align-items: center;\n`\n","/Users/jessica/Desktop/TCC/consig/frontend/src/components/Header/styles.ts",[],"/Users/jessica/Desktop/TCC/consig/frontend/src/pages/ResetPassword/styles.ts",[],"/Users/jessica/Desktop/TCC/consig/frontend/src/components/InputMask/index.tsx",["729","730"],"import React, { useCallback, useState, useRef, useEffect } from 'react'\nimport { useField } from '@unform/core'\nimport { FiAlertCircle } from 'react-icons/fi'\nimport ReactInputMask from 'react-input-mask'\nimport { Container, Error } from './styles'\nimport { Props } from './types'\n\nconst InputMask: React.FC<Props> = ({ name, ...rest }: Props) => {\n  const [isFocused, setIsFocused] = useState(false)\n  const [isFilled, setIsFilled] = useState(false)\n\n  const inputRef = useRef(null)\n  const { registerField, defaultValue, fieldName, error } = useField(name)\n  useEffect(() => {\n    registerField({\n      name: fieldName,\n      ref: inputRef.current,\n      path: 'value',\n      setValue(ref: any, value: string) {\n        ref.setInputValue(value)\n      },\n      clearValue(ref: any) {\n        ref.setInputValue('')\n      }\n    })\n  }, [fieldName, registerField])\n\n  const handleInputFocus = useCallback(() => {\n    setIsFocused(true)\n  }, [])\n\n  const handleInputBlur = useCallback(() => {\n    setIsFocused(false)\n\n    setIsFilled(!!inputRef?.current)\n  }, [])\n\n  const handleInputChange = useCallback(() => {\n    setIsFilled(!!inputRef?.current)\n  }, [])\n\n  return (\n    <Container\n      isFilled={isFilled}\n      isFocused={isFocused}\n      hasError={!!error}\n      aria-label={`${name}-container`}\n    >\n      <ReactInputMask\n        ref={inputRef}\n        name={name}\n        defaultValue={defaultValue}\n        onFocus={handleInputFocus}\n        onBlur={handleInputBlur}\n        onChange={handleInputChange}\n        {...rest}\n      />\n      {error && (\n        <Error title={error}>\n          <FiAlertCircle color=\"#c53030\" size={20} />\n        </Error>\n      )}\n    </Container>\n  )\n}\n\nexport default InputMask\n","/Users/jessica/Desktop/TCC/consig/frontend/src/components/ModalEditBatch/index.tsx",["731","732","733","734"],"/* eslint-disable camelcase */\nimport React, { useRef, useCallback, useState, useEffect } from 'react'\nimport { FormHandles } from '@unform/core'\nimport { Form } from '@unform/web'\nimport Modal from '../Modal'\nimport Input from '../Input'\nimport Button from '../Button'\nimport InputSelect from '../InputSelect'\nimport { FiCheckSquare } from 'react-icons/fi'\nimport api from '../../services/api'\n\nimport { Container, Block, InputBlock, Label } from './styles'\n\ninterface ISuplier {\n  id: string\n  companyName: string\n  cnpj: string\n  address: string\n  phone: string\n  available: boolean\n}\n\ninterface IBatch {\n  // id: string\n  batch_number: string\n  delivery_date: string\n  description: string\n  suplier: ISuplier\n  available: boolean\n}\n\ninterface IModalProps {\n  isOpen: boolean\n  setIsOpen: () => void\n  handleUpdateBatch: (batch: Omit<IBatch, 'id'>) => void\n  editingBatch: IBatch\n}\n\ninterface IEditBatchData {\n  batch_number: string\n  delivery_date: string\n  description: string\n  suplier: ISuplier\n  available: boolean\n}\n\ninterface ISuplier {\n  id: string\n  companyName: string\n  cnpj: string\n  address: string\n  phone: string\n  available: boolean\n}\n\ninterface IListSelect {\n  value: string\n  label: string\n}\n\ninterface LoadListSelect {\n  (list: IListSelect[]): void\n}\n\nconst ModalEditBatch: React.FC<IModalProps> = ({\n  isOpen,\n  setIsOpen,\n  editingBatch,\n  handleUpdateBatch\n}) => {\n  const formRef = useRef<FormHandles>(null)\n  const [supliersListOption, setSupliersListOption] = useState<IListSelect[]>(\n    []\n  )\n  const [suplierSelected, setSuplierSelected] = useState<string>('')\n\n  const loadOptions = useCallback(\n    (inputValue: string, callback: LoadListSelect) => {\n      const data = supliersListOption.filter(list =>\n        list.label.includes(inputValue)\n      )\n\n      callback(data)\n    },\n    [supliersListOption]\n  )\n\n  useEffect(() => {\n    async function loadSupliers() {\n      const response = await api.get<ISuplier[]>('/supliers')\n\n      const data = response.data.map(suplier => ({\n        label: suplier.companyName,\n        value: suplier.id\n      }))\n\n      setSupliersListOption(data)\n    }\n    loadSupliers()\n  }, [supliersListOption])\n\n  const handleSubmit = useCallback(\n    async (data: IEditBatchData) => {\n      handleUpdateBatch(data)\n      setIsOpen()\n      console.log('hadle submit')\n      console.log(data)\n    },\n    [handleUpdateBatch, setIsOpen]\n  )\n\n  return (\n    <Modal isOpen={isOpen} setIsOpen={setIsOpen}>\n      <Form ref={formRef} onSubmit={handleSubmit} initialData={editingBatch}>\n        <h1>Editar Lote</h1>\n        <Container>\n          <Label>Número do Lote</Label>\n          <Input name=\"batch_number\" type=\"number\" />\n\n          <Label>Data de Entrega</Label>\n          <Input name=\"delivery_date\" type=\"date\" />\n\n          <Label>Descrição</Label>\n          <Input name=\"description\" type=\"text\" />\n\n          <Label>Fornecedor</Label>\n          <InputSelect\n            name=\"suplier_id\"\n            defaultOptions={supliersListOption}\n            loadOptions={loadOptions}\n          />\n\n          <Button type=\"submit\">\n            Alterar Dados\n            <FiCheckSquare size={24} />\n          </Button>\n        </Container>\n      </Form>\n    </Modal>\n  )\n}\n\nexport default ModalEditBatch\n","/Users/jessica/Desktop/TCC/consig/frontend/src/pages/SuccessEditSuplier/index.tsx",["735"],"import React, { useState } from 'react'\nimport Lottie from 'react-lottie'\nimport { Link } from 'react-router-dom'\nimport { FiArrowLeft } from 'react-icons/fi'\n\nimport animationData from '../../assets/lottie-animations/truck.json'\n\nimport { Container, ImageBlock } from './styles'\n\nconst SuccessEditSuplier: React.FC = () => {\n  const defaultOptions = {\n    loop: true,\n    autoplay: true,\n    animationData: animationData,\n    rendererSettings: {\n      preserveAspectRatio: 'xMidYMid slice'\n    }\n  }\n\n  return (\n    <Container>\n      <ImageBlock>\n        <Lottie options={defaultOptions} height={200} width={200} />\n        <h1>Fornecedor Editado!</h1>\n        <h6>O fornecedor foi editado com sucesso!</h6>\n        <Link to=\"/supliers\">\n          <FiArrowLeft /> Voltar\n        </Link>\n      </ImageBlock>\n    </Container>\n  )\n}\n\nexport default SuccessEditSuplier\n","/Users/jessica/Desktop/TCC/consig/frontend/src/components/Sidebar/index.tsx",["736","737"],"import React from 'react'\n\nimport { Container, MenuBlock, MenuItem } from './styles'\nimport Logo from '../../assets/images/logo-consig.svg'\nimport Menu from '../Menu'\n\nconst Sidebar: React.FC = () => {\n  return (\n    <Container>\n      <img src={Logo} alt=\"Consig\" />\n      <Menu />\n    </Container>\n  )\n}\n\nexport default Sidebar\n","/Users/jessica/Desktop/TCC/consig/frontend/src/components/Toast/styles.ts",["738"],"/Users/jessica/Desktop/estudos/projetoTaskFrontend/src/index.tsx",[],[],"/Users/jessica/Desktop/estudos/projetoTaskFrontend/src/routes/index.tsx",["739","740"],"import React from 'react'\nimport { Switch, BrowserRouter, Route } from 'react-router-dom'\nimport GlobalStyle from '../styles/global'\n\nimport { ThemeProvider, DefaultTheme } from 'styled-components'\nimport theme from '../styles/theme'\n\nimport Landing from '../pages/Landing'\nimport CreateStory from '../pages/CreateStory'\nimport CreateTask from '../pages/CreateTask'\n\nconst Routes: React.FC = () => {\n  return (\n    <Switch>\n      <ThemeProvider theme={theme}>\n        <Route path=\"/\" exact component={Landing} />\n        <Route path=\"/create-story\" exact component={CreateStory} />\n        <Route path=\"/create-task/:id\" exact component={CreateTask} />\n        <GlobalStyle />\n      </ThemeProvider>\n    </Switch>\n  )\n}\n\nexport default Routes\n","/Users/jessica/Desktop/estudos/projetoTaskFrontend/src/hooks/toast.tsx",[],"/Users/jessica/Desktop/estudos/projetoTaskFrontend/src/styles/theme/index.ts",[],"/Users/jessica/Desktop/estudos/projetoTaskFrontend/src/pages/Landing/index.tsx",["741"],"import React, { useState, FormEvent } from 'react'\nimport { Link, useHistory } from 'react-router-dom'\nimport { FiArrowRight } from 'react-icons/fi'\nimport api from '../../services/api'\n\nimport LandingImage from '../../assets/images/landing.svg'\n\nimport {\n  Container,\n  Title,\n  Subtitle,\n  InsideContainer,\n  InputBlock\n} from './styles'\n\nconst Landing: React.FC = () => {\n  const [nomeTime, setNomeTime] = useState('')\n  const history = useHistory()\n\n  function handleSubmit(event: FormEvent) {\n    event.preventDefault()\n\n    api.post('/task/addTeam?nomeTime=', {\n      nomeTime\n    })\n\n    console.log('time')\n    console.log(nomeTime)\n    alert('Cadastro efetuado com sucesso')\n\n    history.push('/create-story')\n  }\n\n  return (\n    <Container>\n      <InsideContainer>\n        <img src={LandingImage} alt=\"Landing\" />\n        <Title>PlanningHelper</Title>\n        <Subtitle>Deixe sua planning mais organizada e rápida</Subtitle>\n        <form onSubmit={handleSubmit} className=\"create-task-form\">\n          <InputBlock>\n            <label htmlFor=\"nomeTime\">Digite sua squad</label>\n            <input\n              id=\"nomeTime\"\n              value={nomeTime}\n              onChange={event => setNomeTime(event.target.value)}\n            />\n          </InputBlock>\n          <button className=\"confirm-button\" type=\"submit\">\n            <FiArrowRight />\n          </button>\n        </form>\n      </InsideContainer>\n    </Container>\n  )\n}\n\nexport default Landing\n",[],"/Users/jessica/Desktop/estudos/projetoTaskFrontend/src/pages/CreateTask/index.tsx",["742","743"],"/* eslint-disable camelcase */\nimport React, { useCallback, useRef, useState, useEffect } from 'react'\nimport { useHistory, useParams } from 'react-router-dom'\nimport { Form } from '@unform/web'\nimport { FormHandles } from '@unform/core'\nimport * as Yup from 'yup'\nimport { FiArrowLeft, FiCopy } from 'react-icons/fi'\n\nimport getValidationErrors from '../../utils/getValidationErrors'\nimport { useToast } from '../../hooks/toast'\n\nimport Input from '../../components/Input'\nimport Button from '../../components/Button'\nimport Sidebar from '../../components/Sidebar'\nimport InputSelectSimple from '../../components/InputSelectSimple'\nimport ListItemTask from '../../components/ListItemTask'\nimport ModalEditTask from '../../components/ModalEditTask'\n\nimport api from '../../services/api'\n\nimport {\n  Container,\n  Title,\n  MainContent,\n  RightContent,\n  TitleContent,\n  RightContentInside,\n  Label,\n  Block,\n  InputBlock\n} from './styles'\n\ninterface TaskFormData {\n  id: string\n  issueType: string\n  description: string\n  summary: string\n  hours: number\n  issueId: number\n  jiraKey: string\n  epicLink: string\n  complexityPoints: string\n  priority: string\n  components: string\n  fixVersions: string\n  labels: string\n  dueDate: string\n  team: string\n  originalEstimate: number\n}\n\ninterface IStory {\n  id: string\n  storyNumber: string\n  title: string\n}\n\ninterface StoryParams {\n  id: string\n}\n\nconst CreateTask: React.FC = () => {\n  const params = useParams<StoryParams>()\n  const [story, setStory] = useState<IStory>()\n  const [loading, setLoading] = useState(false)\n  const formRef = useRef<FormHandles>(null)\n  const { addToast } = useToast()\n  const history = useHistory()\n  const { goBack } = useHistory()\n  const [tasks, setTasks] = useState<TaskFormData[]>([])\n  const [editingTask, setEditingTask] = useState<TaskFormData>(\n    {} as TaskFormData\n  )\n  const [editModalOpen, setEditModalOpen] = useState(false)\n\n  const optionsSelect = [\n    { value: 'Sub-Task', label: 'Sub-Task' },\n    { value: 'Sub-Development', label: 'Sub-Development' },\n    { value: 'Sub-Test', label: 'Sub-Test' }\n  ]\n\n  useEffect(() => {\n    api.get('task').then(response => {\n      setTasks(response.data)\n    })\n  }, [tasks])\n\n  useEffect(() => {\n    api.get(`story/${params.id}`).then(response => {\n      setStory(response.data)\n    })\n  }, [params.id])\n\n  const handleCreateTask = useCallback(\n    async (data: TaskFormData) => {\n      try {\n        await api.post('/task', {\n          ...data,\n          jiraKey: story?.storyNumber\n        })\n        addToast({\n          type: 'success',\n          title: 'Cadastro Realizado',\n          description: 'Cadastro realizado com sucesso'\n        })\n      } catch (err) {\n        const errors = getValidationErrors(err)\n\n        formRef.current?.setErrors(errors)\n\n        addToast({\n          type: 'error',\n          title: 'Erro no cadastro',\n          description: 'Ocorreu um erro ao fazer o cadastro, tente novamente'\n        })\n      }\n    },\n    [addToast, history]\n  )\n\n  async function handleDeleteTask(id: string): Promise<void> {\n    const result = window.confirm('Deseja deletar essa task?')\n\n    if (result) {\n      try {\n        await api.delete(`/task/${id}`)\n\n        const allTasks = tasks.filter(task => task.id !== id)\n\n        setTasks(allTasks)\n\n        addToast({\n          type: 'success',\n          title: 'Task Deletado',\n          description: 'A task foi deletado com sucesso.'\n        })\n      } catch (error) {\n        console.log(error)\n        addToast({\n          type: 'error',\n          title: 'Erro',\n          description: 'Não foi possível deletar a task.'\n        })\n      }\n    }\n  }\n\n  async function handleUpdateTask(\n    task: Omit<TaskFormData, 'id'>\n  ): Promise<void> {\n    try {\n      const { id } = editingTask\n\n      const { data } = await api.put<TaskFormData>(`/task/${id}`, {\n        ...task\n      })\n\n      const updatedTasks = tasks.map(task => (task.id === id ? data : task))\n\n      setTasks(updatedTasks)\n\n      addToast({\n        type: 'success',\n        title: 'Hitória alterado',\n        description: 'A task foi alterada com sucesso.'\n      })\n    } catch (err) {\n      addToast({\n        type: 'error',\n        title: 'Task não foi alterada',\n        description: 'Ocorreu um erro e não foi possível alterar a Task.'\n      })\n    }\n  }\n\n  function toggleEditModal(): void {\n    setEditModalOpen(!editModalOpen)\n  }\n\n  function handleEditTask(task: TaskFormData): void {\n    toggleEditModal()\n    setEditingTask(task)\n  }\n\n  return (\n    <>\n      <ModalEditTask\n        isOpen={editModalOpen}\n        setIsOpen={toggleEditModal}\n        editingTask={editingTask}\n        handleUpdateTask={handleUpdateTask}\n      />\n      <div>\n        <main>\n          <Container>\n            <Sidebar />\n            <MainContent>\n              <RightContent>\n                <RightContentInside>\n                  <button type=\"button\" onClick={goBack}>\n                    <FiArrowLeft size={24} />\n                  </button>\n                  <TitleContent>\n                    <FiCopy />\n                    <Title>Faça o Cadastro da task</Title>\n                  </TitleContent>\n                  <Form ref={formRef} onSubmit={handleCreateTask}>\n                    <InputBlock>\n                      <Block>\n                        <Label>IssueId</Label>\n                        <Input name=\"issueId\" type=\"number\" />\n                      </Block>\n                      <Block>\n                        <Label>Issue Type</Label>\n                        <InputSelectSimple\n                          name=\"issueType\"\n                          loadOptions={optionsSelect}\n                          defaultOptions={optionsSelect}\n                        />\n                      </Block>\n                      <Block>\n                        <Label>Summary</Label>\n                        <Input name=\"title\" type=\"text\" />\n                      </Block>\n                    </InputBlock>\n                    <Label>Descrição</Label>\n                    <Input name=\"description\" type=\"text\" />\n                    <InputBlock>\n                      <Block>\n                        <Label>EpicLink</Label>\n                        <Input name=\"epicLink\" type=\"text\" />\n                      </Block>\n                      <Block>\n                        <Label>Complexity Points</Label>\n                        <Input name=\"complexityPoints\" type=\"text\" />\n                      </Block>\n                      <Block>\n                        <Label>Priority</Label>\n                        <Input name=\"priority\" type=\"text\" />\n                      </Block>\n                    </InputBlock>\n\n                    <InputBlock>\n                      <Block>\n                        <Label>Components</Label>\n                        <Input name=\"components\" type=\"text\" />\n                      </Block>\n                      <Block>\n                        <Label>FixVersions</Label>\n                        <Input name=\"fixVersions\" type=\"text\" />\n                      </Block>\n                      <Block>\n                        <Label>Labels</Label>\n                        <Input name=\"labels\" type=\"text\" />\n                      </Block>\n                    </InputBlock>\n                    <InputBlock>\n                      <Block>\n                        <Label>DueDate</Label>\n                        <Input name=\"dueDate\" type=\"date\" />\n                      </Block>\n                      <Block>\n                        <Label>Original Estimate</Label>\n                        <Input name=\"originalEstimate\" type=\"number\" />\n                      </Block>\n                    </InputBlock>\n\n                    <Button loading={loading} type=\"submit\">\n                      Cadastrar\n                    </Button>\n                  </Form>\n\n                  <h1>Lista de Taks</h1>\n                  {tasks &&\n                    tasks.map(task => {\n                      return (\n                        <ListItemTask\n                          key={task.id}\n                          icon={FiCopy}\n                          task={task}\n                          handleDelete={handleDeleteTask}\n                          handleEdit={handleEditTask}\n                        />\n                      )\n                    })}\n                </RightContentInside>\n              </RightContent>\n            </MainContent>\n          </Container>\n        </main>\n      </div>\n    </>\n  )\n}\n\nexport default CreateTask\n","/Users/jessica/Desktop/estudos/projetoTaskFrontend/src/pages/CreateStory/styles.ts",[],"/Users/jessica/Desktop/estudos/projetoTaskFrontend/src/pages/CreateTask/styles.ts",["744"],"/Users/jessica/Desktop/estudos/projetoTaskFrontend/src/components/ToastContainer/index.tsx",[],"/Users/jessica/Desktop/estudos/projetoTaskFrontend/src/components/ListItem/index.tsx",["745"],"/* eslint-disable @typescript-eslint/ban-types */\nimport React, { useCallback } from 'react'\nimport { FiCopy, FiEdit, FiTrash } from 'react-icons/fi'\nimport { IconBaseProps } from 'react-icons'\nimport { Link } from 'react-router-dom'\n\nimport { Container, ButtonBox } from './styles'\n\ninterface IStory {\n  id: string\n  storyNumber: string\n  title: string\n}\n\ninterface IProps {\n  story: IStory\n  icon?: React.ComponentType<IconBaseProps>\n  handleDelete: (id: string) => {}\n  handleEdit: (user: IStory) => void\n}\n\nconst ListItem: React.FC<IProps> = ({\n  icon: Icon,\n  story,\n  handleDelete,\n  handleEdit\n}: IProps) => {\n  function setEditingUser(): void {\n    handleEdit(story)\n  }\n\n  return (\n    <Container>\n      {Icon && <Icon />}\n      <p>{story.storyNumber}</p>\n      <p>{story.title}</p>\n      <ButtonBox>\n        <Link to={`/create-task/${story.id}`}>\n          <FiCopy />\n        </Link>\n        <button onClick={() => setEditingUser()}>\n          <FiEdit />\n        </button>\n        <button onClick={() => handleDelete(story.id)}>\n          <FiTrash />\n        </button>\n      </ButtonBox>\n    </Container>\n  )\n}\n\nexport default ListItem\n","/Users/jessica/Desktop/estudos/projetoTaskFrontend/src/components/Input/index.tsx",[],[],"/Users/jessica/Desktop/estudos/projetoTaskFrontend/src/components/Sidebar/index.tsx",["746","747"],"import React from 'react'\n\nimport { Container, MenuBlock, MenuItem } from './styles'\nimport Logo from '../../assets/images/logo_itau.svg'\nimport Menu from '../Menu'\n\nconst Sidebar: React.FC = () => {\n  return (\n    <Container>\n      <img src={Logo} alt=\"Itau\" />\n      <Menu />\n    </Container>\n  )\n}\n\nexport default Sidebar\n","/Users/jessica/Desktop/estudos/projetoTaskFrontend/src/components/ListItemTask/index.tsx",["748","749","750","751","752","753","754","755","756"],"/Users/jessica/Desktop/estudos/projetoTaskFrontend/src/components/Button/styles.ts",[],"/Users/jessica/Desktop/estudos/projetoTaskFrontend/src/components/InputSelectSimple/styles.ts",[],[],"/Users/jessica/Desktop/estudos/projetoTaskFrontend/src/components/ModalEditTask/styles.ts",[],"/Users/jessica/Desktop/estudos/projetoTaskFrontend/src/components/Modal/index.tsx",["757"],"/Users/jessica/Desktop/estudos/projetoTaskFrontend/src/components/Menu/styles.ts",[],"/Users/jessica/Desktop/estudos/projetoTaskFrontend/src/components/MenuItem/styles.ts",[],"/Users/jessica/Desktop/estudos/projetoTaskFrontend/src/components/ModalEditTask/index.tsx",[],"/Users/jessica/Desktop/estudos/projetoTaskFrontend/src/styles/global.ts",[],"/Users/jessica/Desktop/estudos/projetoTaskFrontend/src/pages/Landing/styles.ts",[],"/Users/jessica/Desktop/estudos/projetoTaskFrontend/src/components/Button/index.tsx",[],"/Users/jessica/Desktop/estudos/projetoTaskFrontend/src/components/Sidebar/styles.ts",[],"/Users/jessica/Desktop/estudos/projetoTaskFrontend/src/components/ModalEditStory/styles.ts",[],"/Users/jessica/Desktop/estudos/projetoTaskFrontend/src/components/Toast/index.tsx",[],"/Users/jessica/Desktop/estudos/projetoTaskFrontend/src/components/Tooltip/index.tsx",[],"/Users/jessica/Desktop/estudos/projetoTaskFrontend/src/components/ModalEditStory/index.tsx",["758","759"],"/Users/jessica/Desktop/estudos/projetoTaskFrontend/src/styles/theme/colors.ts",[],"/Users/jessica/Desktop/estudos/projetoTaskFrontend/src/pages/CreateStory/index.tsx",["760"],"/Users/jessica/Desktop/estudos/projetoTaskFrontend/src/components/InputSelectSimple/index.tsx",["761","762","763"],"/Users/jessica/Desktop/estudos/projetoTaskFrontend/src/components/ToastContainer/styles.ts",[],"/Users/jessica/Desktop/estudos/projetoTaskFrontend/src/components/ListItem/styles.ts",[],"/Users/jessica/Desktop/estudos/projetoTaskFrontend/src/components/Toast/styles.ts",["764"],"import styled, { css } from 'styled-components'\nimport { lighten } from 'polished'\n\ninterface ContainerProps {\n  type?: 'success' | 'error' | 'info'\n  hasDescription: boolean\n}\n\nconst toastTypeVariations = {\n  info: css`\n    background: #ebf8ff;\n    color: #3172b7;\n  `,\n  success: css`\n    background: #e6fffa;\n    color: #2e656a;\n  `,\n  error: css`\n    background: #fddede;\n    color: #c53030;\n  `\n}\n\nexport const Container = styled.div<ContainerProps>`\n  position: relative;\n  display: flex;\n  width: 36rem;\n  padding: 1.6rem 3rem 1.6rem 1.6rem;\n  border-radius: 1rem;\n  box-shadow: 0.2rem 0.2rem 0.8rem rgba(0, 0, 0, 0.2);\n  & + div {\n    margin-top: 0.8rem;\n  }\n  ${({ type }) => toastTypeVariations[type || 'info']}\n  > svg {\n    margin: 0.4rem 1.2rem 0 0;\n  }\n  div {\n    flex: 1;\n    P {\n      margin-top: 0.4rem;\n      font-size: 1.4rem;\n      opacity: 0.8;\n      line-height: 2rem;\n    }\n  }\n  button {\n    position: absolute;\n    top: 1.9rem;\n    right: 1.6rem;\n    border: 0;\n    background: transparent;\n    color: inherit;\n  }\n  ${({ hasDescription }) =>\n    !hasDescription &&\n    css`\n      align-items: center;\n      svg {\n        margin-top: 0;\n      }\n    `}\n`\n","/Users/jessica/Desktop/estudos/projetoTaskFrontend/src/components/Input/styles.ts",[],"/Users/jessica/Desktop/estudos/projetoTaskFrontend/src/App.tsx",[],"/Users/jessica/Desktop/estudos/projetoTaskFrontend/src/services/api.ts",[],"/Users/jessica/Desktop/estudos/projetoTaskFrontend/src/utils/getValidationErrors.ts",[],"/Users/jessica/Desktop/estudos/projetoTaskFrontend/src/components/MenuItem/index.tsx",["765"],"/Users/jessica/Desktop/estudos/projetoTaskFrontend/src/components/ListItemTask/styles.ts",["766"],{"ruleId":"767","severity":1,"message":"768","line":33,"column":11,"nodeType":"769","messageId":"770","endLine":33,"endColumn":20},{"ruleId":"767","severity":1,"message":"771","line":11,"column":26,"nodeType":"769","messageId":"770","endLine":11,"endColumn":43},{"ruleId":"767","severity":1,"message":"772","line":5,"column":10,"nodeType":"769","messageId":"770","endLine":5,"endColumn":14},{"ruleId":"767","severity":1,"message":"773","line":11,"column":8,"nodeType":"769","messageId":"770","endLine":11,"endColumn":19},{"ruleId":"767","severity":1,"message":"774","line":42,"column":19,"nodeType":"769","messageId":"770","endLine":42,"endColumn":29},{"ruleId":"767","severity":1,"message":"775","line":49,"column":11,"nodeType":"769","messageId":"770","endLine":49,"endColumn":21},{"ruleId":"767","severity":1,"message":"776","line":103,"column":18,"nodeType":"769","messageId":"770","endLine":103,"endColumn":35},{"ruleId":"767","severity":1,"message":"774","line":41,"column":19,"nodeType":"769","messageId":"770","endLine":41,"endColumn":29},{"ruleId":"767","severity":1,"message":"777","line":2,"column":17,"nodeType":"769","messageId":"770","endLine":2,"endColumn":24},{"ruleId":"767","severity":1,"message":"778","line":2,"column":10,"nodeType":"769","messageId":"770","endLine":2,"endColumn":15},{"ruleId":"779","severity":1,"message":"780","line":24,"column":23,"nodeType":"781","messageId":"782","endLine":24,"endColumn":26,"suggestions":"783"},{"ruleId":"779","severity":1,"message":"780","line":38,"column":23,"nodeType":"781","messageId":"782","endLine":38,"endColumn":26,"suggestions":"784"},{"ruleId":"779","severity":1,"message":"780","line":41,"column":25,"nodeType":"781","messageId":"782","endLine":41,"endColumn":28,"suggestions":"785"},{"ruleId":"767","severity":1,"message":"778","line":2,"column":10,"nodeType":"769","messageId":"770","endLine":2,"endColumn":15},{"ruleId":"767","severity":1,"message":"786","line":8,"column":8,"nodeType":"769","messageId":"770","endLine":8,"endColumn":13},{"ruleId":"767","severity":1,"message":"787","line":3,"column":17,"nodeType":"769","messageId":"770","endLine":3,"endColumn":28},{"ruleId":"767","severity":1,"message":"788","line":4,"column":26,"nodeType":"769","messageId":"770","endLine":4,"endColumn":33},{"ruleId":"767","severity":1,"message":"789","line":21,"column":11,"nodeType":"769","messageId":"770","endLine":21,"endColumn":25},{"ruleId":"767","severity":1,"message":"790","line":45,"column":54,"nodeType":"769","messageId":"770","endLine":45,"endColumn":61},{"ruleId":"767","severity":1,"message":"786","line":8,"column":8,"nodeType":"769","messageId":"770","endLine":8,"endColumn":13},{"ruleId":"767","severity":1,"message":"791","line":1,"column":17,"nodeType":"769","messageId":"770","endLine":1,"endColumn":25},{"ruleId":"767","severity":1,"message":"788","line":4,"column":26,"nodeType":"769","messageId":"770","endLine":4,"endColumn":33},{"ruleId":"767","severity":1,"message":"792","line":29,"column":3,"nodeType":"769","messageId":"770","endLine":29,"endColumn":15},{"ruleId":"767","severity":1,"message":"793","line":32,"column":23,"nodeType":"769","messageId":"770","endLine":32,"endColumn":37},{"ruleId":"767","severity":1,"message":"794","line":33,"column":11,"nodeType":"769","messageId":"770","endLine":33,"endColumn":19},{"ruleId":"767","severity":1,"message":"778","line":2,"column":10,"nodeType":"769","messageId":"770","endLine":2,"endColumn":15},{"ruleId":"767","severity":1,"message":"795","line":2,"column":18,"nodeType":"769","messageId":"770","endLine":2,"endColumn":31},{"ruleId":"767","severity":1,"message":"796","line":5,"column":25,"nodeType":"769","messageId":"770","endLine":5,"endColumn":37},{"ruleId":"767","severity":1,"message":"797","line":6,"column":8,"nodeType":"769","messageId":"770","endLine":6,"endColumn":25},{"ruleId":"767","severity":1,"message":"774","line":27,"column":19,"nodeType":"769","messageId":"770","endLine":27,"endColumn":29},{"ruleId":"767","severity":1,"message":"798","line":16,"column":8,"nodeType":"769","messageId":"770","endLine":16,"endColumn":20},{"ruleId":"767","severity":1,"message":"799","line":5,"column":3,"nodeType":"769","messageId":"770","endLine":5,"endColumn":9},{"ruleId":"767","severity":1,"message":"800","line":35,"column":10,"nodeType":"769","messageId":"770","endLine":35,"endColumn":23},{"ruleId":"767","severity":1,"message":"778","line":2,"column":10,"nodeType":"769","messageId":"770","endLine":2,"endColumn":15},{"ruleId":"767","severity":1,"message":"787","line":2,"column":17,"nodeType":"769","messageId":"770","endLine":2,"endColumn":28},{"ruleId":"767","severity":1,"message":"777","line":2,"column":17,"nodeType":"769","messageId":"770","endLine":2,"endColumn":24},{"ruleId":"767","severity":1,"message":"801","line":11,"column":21,"nodeType":"769","messageId":"770","endLine":11,"endColumn":26},{"ruleId":"767","severity":1,"message":"802","line":11,"column":28,"nodeType":"769","messageId":"770","endLine":11,"endColumn":38},{"ruleId":"767","severity":1,"message":"787","line":3,"column":17,"nodeType":"769","messageId":"770","endLine":3,"endColumn":28},{"ruleId":"767","severity":1,"message":"788","line":4,"column":26,"nodeType":"769","messageId":"770","endLine":4,"endColumn":33},{"ruleId":"767","severity":1,"message":"801","line":10,"column":21,"nodeType":"769","messageId":"770","endLine":10,"endColumn":26},{"ruleId":"767","severity":1,"message":"802","line":10,"column":28,"nodeType":"769","messageId":"770","endLine":10,"endColumn":38},{"ruleId":"767","severity":1,"message":"791","line":1,"column":17,"nodeType":"769","messageId":"770","endLine":1,"endColumn":25},{"ruleId":"767","severity":1,"message":"803","line":3,"column":10,"nodeType":"769","messageId":"770","endLine":3,"endColumn":23},{"ruleId":"767","severity":1,"message":"804","line":11,"column":24,"nodeType":"769","messageId":"770","endLine":11,"endColumn":29},{"ruleId":"767","severity":1,"message":"805","line":12,"column":9,"nodeType":"769","messageId":"770","endLine":12,"endColumn":17},{"ruleId":"767","severity":1,"message":"786","line":8,"column":8,"nodeType":"769","messageId":"770","endLine":8,"endColumn":13},{"ruleId":"767","severity":1,"message":"786","line":7,"column":8,"nodeType":"769","messageId":"770","endLine":7,"endColumn":13},{"ruleId":"767","severity":1,"message":"778","line":2,"column":10,"nodeType":"769","messageId":"770","endLine":2,"endColumn":15},{"ruleId":"767","severity":1,"message":"806","line":24,"column":11,"nodeType":"769","messageId":"770","endLine":24,"endColumn":20},{"ruleId":"767","severity":1,"message":"807","line":16,"column":8,"nodeType":"769","messageId":"770","endLine":16,"endColumn":18},{"ruleId":"767","severity":1,"message":"808","line":73,"column":18,"nodeType":"769","messageId":"770","endLine":73,"endColumn":37},{"ruleId":"767","severity":1,"message":"774","line":60,"column":19,"nodeType":"769","messageId":"770","endLine":60,"endColumn":29},{"ruleId":"767","severity":1,"message":"809","line":64,"column":10,"nodeType":"769","messageId":"770","endLine":64,"endColumn":25},{"ruleId":"767","severity":1,"message":"810","line":82,"column":9,"nodeType":"769","messageId":"770","endLine":82,"endColumn":28},{"ruleId":"779","severity":1,"message":"780","line":24,"column":23,"nodeType":"781","messageId":"782","endLine":24,"endColumn":26,"suggestions":"811"},{"ruleId":"779","severity":1,"message":"780","line":38,"column":23,"nodeType":"781","messageId":"782","endLine":38,"endColumn":26,"suggestions":"812"},{"ruleId":"779","severity":1,"message":"780","line":41,"column":25,"nodeType":"781","messageId":"782","endLine":41,"endColumn":28,"suggestions":"813"},{"ruleId":"779","severity":1,"message":"780","line":5,"column":13,"nodeType":"781","messageId":"782","endLine":5,"endColumn":16,"suggestions":"814"},{"ruleId":"767","severity":1,"message":"778","line":2,"column":10,"nodeType":"769","messageId":"770","endLine":2,"endColumn":15},{"ruleId":"767","severity":1,"message":"801","line":10,"column":21,"nodeType":"769","messageId":"770","endLine":10,"endColumn":26},{"ruleId":"767","severity":1,"message":"802","line":10,"column":28,"nodeType":"769","messageId":"770","endLine":10,"endColumn":38},{"ruleId":"767","severity":1,"message":"774","line":28,"column":19,"nodeType":"769","messageId":"770","endLine":28,"endColumn":29},{"ruleId":"767","severity":1,"message":"815","line":7,"column":23,"nodeType":"769","messageId":"770","endLine":7,"endColumn":30},{"ruleId":"767","severity":1,"message":"774","line":38,"column":19,"nodeType":"769","messageId":"770","endLine":38,"endColumn":29},{"ruleId":"767","severity":1,"message":"786","line":8,"column":8,"nodeType":"769","messageId":"770","endLine":8,"endColumn":13},{"ruleId":"767","severity":1,"message":"816","line":1,"column":25,"nodeType":"769","messageId":"770","endLine":1,"endColumn":34},{"ruleId":"767","severity":1,"message":"777","line":2,"column":17,"nodeType":"769","messageId":"770","endLine":2,"endColumn":24},{"ruleId":"767","severity":1,"message":"817","line":5,"column":10,"nodeType":"769","messageId":"770","endLine":5,"endColumn":16},{"ruleId":"767","severity":1,"message":"818","line":35,"column":11,"nodeType":"769","messageId":"770","endLine":35,"endColumn":23},{"ruleId":"767","severity":1,"message":"819","line":87,"column":18,"nodeType":"769","messageId":"770","endLine":87,"endColumn":37},{"ruleId":"767","severity":1,"message":"778","line":2,"column":10,"nodeType":"769","messageId":"770","endLine":2,"endColumn":15},{"ruleId":"779","severity":1,"message":"780","line":19,"column":21,"nodeType":"781","messageId":"782","endLine":19,"endColumn":24,"suggestions":"820"},{"ruleId":"779","severity":1,"message":"780","line":22,"column":23,"nodeType":"781","messageId":"782","endLine":22,"endColumn":26,"suggestions":"821"},{"ruleId":"767","severity":1,"message":"801","line":12,"column":21,"nodeType":"769","messageId":"770","endLine":12,"endColumn":26},{"ruleId":"767","severity":1,"message":"802","line":12,"column":28,"nodeType":"769","messageId":"770","endLine":12,"endColumn":38},{"ruleId":"767","severity":1,"message":"809","line":75,"column":10,"nodeType":"769","messageId":"770","endLine":75,"endColumn":25},{"ruleId":"767","severity":1,"message":"822","line":75,"column":27,"nodeType":"769","messageId":"770","endLine":75,"endColumn":45},{"ruleId":"767","severity":1,"message":"791","line":1,"column":17,"nodeType":"769","messageId":"770","endLine":1,"endColumn":25},{"ruleId":"767","severity":1,"message":"823","line":3,"column":21,"nodeType":"769","messageId":"770","endLine":3,"endColumn":30},{"ruleId":"767","severity":1,"message":"824","line":3,"column":32,"nodeType":"769","messageId":"770","endLine":3,"endColumn":40},{"ruleId":"767","severity":1,"message":"777","line":2,"column":10,"nodeType":"769","messageId":"770","endLine":2,"endColumn":17},{"ruleId":"767","severity":1,"message":"795","line":2,"column":18,"nodeType":"769","messageId":"770","endLine":2,"endColumn":31},{"ruleId":"767","severity":1,"message":"796","line":5,"column":25,"nodeType":"769","messageId":"770","endLine":5,"endColumn":37},{"ruleId":"767","severity":1,"message":"772","line":2,"column":10,"nodeType":"769","messageId":"770","endLine":2,"endColumn":14},{"ruleId":"767","severity":1,"message":"825","line":6,"column":13,"nodeType":"769","messageId":"770","endLine":6,"endColumn":16},{"ruleId":"767","severity":1,"message":"774","line":65,"column":19,"nodeType":"769","messageId":"770","endLine":65,"endColumn":29},{"ruleId":"767","severity":1,"message":"778","line":2,"column":10,"nodeType":"769","messageId":"770","endLine":2,"endColumn":15},{"ruleId":"767","severity":1,"message":"787","line":2,"column":17,"nodeType":"769","messageId":"770","endLine":2,"endColumn":28},{"ruleId":"767","severity":1,"message":"823","line":3,"column":21,"nodeType":"769","messageId":"770","endLine":3,"endColumn":30},{"ruleId":"767","severity":1,"message":"824","line":3,"column":32,"nodeType":"769","messageId":"770","endLine":3,"endColumn":40},{"ruleId":"767","severity":1,"message":"816","line":3,"column":35,"nodeType":"769","messageId":"770","endLine":3,"endColumn":44},{"ruleId":"767","severity":1,"message":"826","line":4,"column":10,"nodeType":"769","messageId":"770","endLine":4,"endColumn":16},{"ruleId":"767","severity":1,"message":"772","line":6,"column":10,"nodeType":"769","messageId":"770","endLine":6,"endColumn":14},{"ruleId":"767","severity":1,"message":"827","line":16,"column":8,"nodeType":"769","messageId":"770","endLine":16,"endColumn":14},{"ruleId":"767","severity":1,"message":"794","line":50,"column":11,"nodeType":"769","messageId":"770","endLine":50,"endColumn":19},{"ruleId":"767","severity":1,"message":"828","line":52,"column":23,"nodeType":"769","messageId":"770","endLine":52,"endColumn":37},{"ruleId":"767","severity":1,"message":"829","line":53,"column":10,"nodeType":"769","messageId":"770","endLine":53,"endColumn":17},{"ruleId":"767","severity":1,"message":"774","line":53,"column":19,"nodeType":"769","messageId":"770","endLine":53,"endColumn":29},{"ruleId":"767","severity":1,"message":"830","line":59,"column":25,"nodeType":"769","messageId":"770","endLine":59,"endColumn":36},{"ruleId":"779","severity":1,"message":"780","line":5,"column":13,"nodeType":"781","messageId":"782","endLine":5,"endColumn":16,"suggestions":"831"},{"ruleId":"767","severity":1,"message":"801","line":10,"column":21,"nodeType":"769","messageId":"770","endLine":10,"endColumn":26},{"ruleId":"767","severity":1,"message":"802","line":10,"column":28,"nodeType":"769","messageId":"770","endLine":10,"endColumn":38},{"ruleId":"767","severity":1,"message":"774","line":28,"column":19,"nodeType":"769","messageId":"770","endLine":28,"endColumn":29},{"ruleId":"779","severity":1,"message":"780","line":24,"column":23,"nodeType":"781","messageId":"782","endLine":24,"endColumn":26,"suggestions":"832"},{"ruleId":"779","severity":1,"message":"780","line":38,"column":23,"nodeType":"781","messageId":"782","endLine":38,"endColumn":26,"suggestions":"833"},{"ruleId":"779","severity":1,"message":"780","line":41,"column":25,"nodeType":"781","messageId":"782","endLine":41,"endColumn":28,"suggestions":"834"},{"ruleId":"767","severity":1,"message":"777","line":2,"column":10,"nodeType":"769","messageId":"770","endLine":2,"endColumn":17},{"ruleId":"767","severity":1,"message":"791","line":1,"column":17,"nodeType":"769","messageId":"770","endLine":1,"endColumn":25},{"ruleId":"767","severity":1,"message":"835","line":1,"column":18,"nodeType":"769","messageId":"770","endLine":1,"endColumn":21},"@typescript-eslint/no-unused-vars","'IUserEdit' is defined but never used.","Identifier","unusedVar","'setAnimationState' is assigned a value but never used.","'Link' is defined but never used.","'GoBackArrow' is defined but never used.","'setLoading' is assigned a value but never used.","'IBatchEdit' is defined but never used.","'handleDeleteBatch' is defined but never used.","'lighten' is defined but never used.","'shade' is defined but never used.","@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["836","837"],["838","839"],["840","841"],"'theme' is defined but never used.","'useCallback' is defined but never used.","'FiTrash' is defined but never used.","'ISuplierToggle' is defined but never used.","'avaible' is assigned a value but never used.","'useState' is defined but never used.","'handleDelete' is defined but never used.","'setIsAvailable' is assigned a value but never used.","'addToast' is assigned a value but never used.","'BrowserRouter' is defined but never used.","'DefaultTheme' is defined but never used.","'usePersistedState' is defined but never used.","'PatientImage' is defined but never used.","'FiPlus' is defined but never used.","'StringDecoder' is defined but never used.","'Block' is defined but never used.","'InputBlock' is defined but never used.","'IconBaseProps' is defined but never used.","'props' is defined but never used.","'location' is assigned a value but never used.","'IMaterial' is defined but never used.","'removeMask' is defined but never used.","'handleDeleteSuplier' is defined but never used.","'suplierSelected' is assigned a value but never used.","'handleSuplierChange' is assigned a value but never used.",["842","843"],["844","845"],["846","847"],["848","849"],"'FiTruck' is defined but never used.","'FormEvent' is defined but never used.","'FiUser' is defined but never used.","'IPatientEdit' is defined but never used.","'handleDeletePatient' is defined but never used.",["850","851"],["852","853"],"'setSuplierSelected' is assigned a value but never used.","'MenuBlock' is defined but never used.","'MenuItem' is defined but never used.","'Yup' is defined but never used.","'FiList' is defined but never used.","'Button' is defined but never used.","'setHoursChange' is assigned a value but never used.","'loading' is assigned a value but never used.","'data' is defined but never used.",["854","855"],["856","857"],["858","859"],["860","861"],"'css' is defined but never used.",{"messageId":"862","fix":"863","desc":"864"},{"messageId":"865","fix":"866","desc":"867"},{"messageId":"862","fix":"868","desc":"864"},{"messageId":"865","fix":"869","desc":"867"},{"messageId":"862","fix":"870","desc":"864"},{"messageId":"865","fix":"871","desc":"867"},{"messageId":"862","fix":"872","desc":"864"},{"messageId":"865","fix":"873","desc":"867"},{"messageId":"862","fix":"874","desc":"864"},{"messageId":"865","fix":"875","desc":"867"},{"messageId":"862","fix":"876","desc":"864"},{"messageId":"865","fix":"877","desc":"867"},{"messageId":"862","fix":"878","desc":"864"},{"messageId":"865","fix":"879","desc":"867"},{"messageId":"862","fix":"880","desc":"864"},{"messageId":"865","fix":"881","desc":"867"},{"messageId":"862","fix":"882","desc":"864"},{"messageId":"865","fix":"883","desc":"867"},{"messageId":"862","fix":"884","desc":"864"},{"messageId":"865","fix":"885","desc":"867"},{"messageId":"862","fix":"886","desc":"864"},{"messageId":"865","fix":"887","desc":"867"},{"messageId":"862","fix":"888","desc":"864"},{"messageId":"865","fix":"889","desc":"867"},{"messageId":"862","fix":"890","desc":"864"},{"messageId":"865","fix":"891","desc":"867"},"suggestUnknown",{"range":"892","text":"893"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"892","text":"894"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"895","text":"893"},{"range":"895","text":"894"},{"range":"896","text":"893"},{"range":"896","text":"894"},{"range":"897","text":"893"},{"range":"897","text":"894"},{"range":"898","text":"893"},{"range":"898","text":"894"},{"range":"899","text":"893"},{"range":"899","text":"894"},{"range":"900","text":"893"},{"range":"900","text":"894"},{"range":"901","text":"893"},{"range":"901","text":"894"},{"range":"902","text":"893"},{"range":"902","text":"894"},{"range":"903","text":"893"},{"range":"903","text":"894"},{"range":"904","text":"893"},{"range":"904","text":"894"},{"range":"905","text":"893"},{"range":"905","text":"894"},{"range":"906","text":"893"},{"range":"906","text":"894"},[726,729],"unknown","never",[1078,1081],[1182,1185],[732,735],[1084,1087],[1188,1191],[125,128],[692,695],[778,781],[125,128],[732,735],[1084,1087],[1188,1191]]